#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BFData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AppData.Contexts.LeoBaseContext")]
	public partial class DataBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDefinitionAboutViolation(DefinitionAboutViolation instance);
    partial void UpdateDefinitionAboutViolation(DefinitionAboutViolation instance);
    partial void DeleteDefinitionAboutViolation(DefinitionAboutViolation instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertEmploeyrPosition(EmploeyrPosition instance);
    partial void UpdateEmploeyrPosition(EmploeyrPosition instance);
    partial void DeleteEmploeyrPosition(EmploeyrPosition instance);
    partial void InsertEmployer(Employer instance);
    partial void UpdateEmployer(Employer instance);
    partial void DeleteEmployer(Employer instance);
    partial void InsertInjunctionItem(InjunctionItem instance);
    partial void UpdateInjunctionItem(InjunctionItem instance);
    partial void DeleteInjunctionItem(InjunctionItem instance);
    partial void InsertInjunction(Injunction instance);
    partial void UpdateInjunction(Injunction instance);
    partial void DeleteInjunction(Injunction instance);
    partial void InsertManager(Manager instance);
    partial void UpdateManager(Manager instance);
    partial void DeleteManager(Manager instance);
    partial void InsertOrganisation(Organisation instance);
    partial void UpdateOrganisation(Organisation instance);
    partial void DeleteOrganisation(Organisation instance);
    partial void InsertPersoneAddress(PersoneAddress instance);
    partial void UpdatePersoneAddress(PersoneAddress instance);
    partial void DeletePersoneAddress(PersoneAddress instance);
    partial void InsertPersone(Persone instance);
    partial void UpdatePersone(Persone instance);
    partial void DeletePersone(Persone instance);
    partial void InsertPhone(Phone instance);
    partial void UpdatePhone(Phone instance);
    partial void DeletePhone(Phone instance);
    partial void InsertProtocolAboutArrest(ProtocolAboutArrest instance);
    partial void UpdateProtocolAboutArrest(ProtocolAboutArrest instance);
    partial void DeleteProtocolAboutArrest(ProtocolAboutArrest instance);
    partial void InsertProtocolAboutBringing(ProtocolAboutBringing instance);
    partial void UpdateProtocolAboutBringing(ProtocolAboutBringing instance);
    partial void DeleteProtocolAboutBringing(ProtocolAboutBringing instance);
    partial void InsertProtocolAboutInspectionAutoe(ProtocolAboutInspectionAutoe instance);
    partial void UpdateProtocolAboutInspectionAutoe(ProtocolAboutInspectionAutoe instance);
    partial void DeleteProtocolAboutInspectionAutoe(ProtocolAboutInspectionAutoe instance);
    partial void InsertProtocolAboutInspectionOrganisation(ProtocolAboutInspectionOrganisation instance);
    partial void UpdateProtocolAboutInspectionOrganisation(ProtocolAboutInspectionOrganisation instance);
    partial void DeleteProtocolAboutInspectionOrganisation(ProtocolAboutInspectionOrganisation instance);
    partial void InsertProtocolAboutInspection(ProtocolAboutInspection instance);
    partial void UpdateProtocolAboutInspection(ProtocolAboutInspection instance);
    partial void DeleteProtocolAboutInspection(ProtocolAboutInspection instance);
    partial void InsertProtocolAboutViolationOrganisation(ProtocolAboutViolationOrganisation instance);
    partial void UpdateProtocolAboutViolationOrganisation(ProtocolAboutViolationOrganisation instance);
    partial void DeleteProtocolAboutViolationOrganisation(ProtocolAboutViolationOrganisation instance);
    partial void InsertProtocolAboutViolationPersone(ProtocolAboutViolationPersone instance);
    partial void UpdateProtocolAboutViolationPersone(ProtocolAboutViolationPersone instance);
    partial void DeleteProtocolAboutViolationPersone(ProtocolAboutViolationPersone instance);
    partial void InsertProtocolAboutWithdraw(ProtocolAboutWithdraw instance);
    partial void UpdateProtocolAboutWithdraw(ProtocolAboutWithdraw instance);
    partial void DeleteProtocolAboutWithdraw(ProtocolAboutWithdraw instance);
    partial void InsertProtocol(Protocol instance);
    partial void UpdateProtocol(Protocol instance);
    partial void DeleteProtocol(Protocol instance);
    partial void InsertProtocolType(ProtocolType instance);
    partial void UpdateProtocolType(ProtocolType instance);
    partial void DeleteProtocolType(ProtocolType instance);
    partial void InsertRulingForViolation(RulingForViolation instance);
    partial void UpdateRulingForViolation(RulingForViolation instance);
    partial void DeleteRulingForViolation(RulingForViolation instance);
    partial void InsertViolationImage(ViolationImage instance);
    partial void UpdateViolationImage(ViolationImage instance);
    partial void DeleteViolationImage(ViolationImage instance);
    partial void InsertViolation(Violation instance);
    partial void UpdateViolation(Violation instance);
    partial void DeleteViolation(Violation instance);
    partial void InsertViolationType(ViolationType instance);
    partial void UpdateViolationType(ViolationType instance);
    partial void DeleteViolationType(ViolationType instance);
    partial void InsertViolator(Violator instance);
    partial void UpdateViolator(Violator instance);
    partial void DeleteViolator(Violator instance);
    #endregion
		
		public DataBaseDataContext() : 
				base(global::BFData.Properties.Settings.Default.AppData_Contexts_LeoBaseContextConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DefinitionAboutViolation> DefinitionAboutViolations
		{
			get
			{
				return this.GetTable<DefinitionAboutViolation>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<EmploeyrPosition> EmploeyrPositions
		{
			get
			{
				return this.GetTable<EmploeyrPosition>();
			}
		}
		
		public System.Data.Linq.Table<Employer> Employers
		{
			get
			{
				return this.GetTable<Employer>();
			}
		}
		
		public System.Data.Linq.Table<InjunctionItem> InjunctionItems
		{
			get
			{
				return this.GetTable<InjunctionItem>();
			}
		}
		
		public System.Data.Linq.Table<Injunction> Injunctions
		{
			get
			{
				return this.GetTable<Injunction>();
			}
		}
		
		public System.Data.Linq.Table<Manager> Managers
		{
			get
			{
				return this.GetTable<Manager>();
			}
		}
		
		public System.Data.Linq.Table<Organisation> Organisations
		{
			get
			{
				return this.GetTable<Organisation>();
			}
		}
		
		public System.Data.Linq.Table<PersoneAddress> PersoneAddresses
		{
			get
			{
				return this.GetTable<PersoneAddress>();
			}
		}
		
		public System.Data.Linq.Table<Persone> Persones
		{
			get
			{
				return this.GetTable<Persone>();
			}
		}
		
		public System.Data.Linq.Table<Phone> Phones
		{
			get
			{
				return this.GetTable<Phone>();
			}
		}
		
		public System.Data.Linq.Table<ProtocolAboutArrest> ProtocolAboutArrests
		{
			get
			{
				return this.GetTable<ProtocolAboutArrest>();
			}
		}
		
		public System.Data.Linq.Table<ProtocolAboutBringing> ProtocolAboutBringings
		{
			get
			{
				return this.GetTable<ProtocolAboutBringing>();
			}
		}
		
		public System.Data.Linq.Table<ProtocolAboutInspectionAutoe> ProtocolAboutInspectionAutoes
		{
			get
			{
				return this.GetTable<ProtocolAboutInspectionAutoe>();
			}
		}
		
		public System.Data.Linq.Table<ProtocolAboutInspectionOrganisation> ProtocolAboutInspectionOrganisations
		{
			get
			{
				return this.GetTable<ProtocolAboutInspectionOrganisation>();
			}
		}
		
		public System.Data.Linq.Table<ProtocolAboutInspection> ProtocolAboutInspections
		{
			get
			{
				return this.GetTable<ProtocolAboutInspection>();
			}
		}
		
		public System.Data.Linq.Table<ProtocolAboutViolationOrganisation> ProtocolAboutViolationOrganisations
		{
			get
			{
				return this.GetTable<ProtocolAboutViolationOrganisation>();
			}
		}
		
		public System.Data.Linq.Table<ProtocolAboutViolationPersone> ProtocolAboutViolationPersones
		{
			get
			{
				return this.GetTable<ProtocolAboutViolationPersone>();
			}
		}
		
		public System.Data.Linq.Table<ProtocolAboutWithdraw> ProtocolAboutWithdraws
		{
			get
			{
				return this.GetTable<ProtocolAboutWithdraw>();
			}
		}
		
		public System.Data.Linq.Table<Protocol> Protocols
		{
			get
			{
				return this.GetTable<Protocol>();
			}
		}
		
		public System.Data.Linq.Table<ProtocolType> ProtocolTypes
		{
			get
			{
				return this.GetTable<ProtocolType>();
			}
		}
		
		public System.Data.Linq.Table<RulingForViolation> RulingForViolations
		{
			get
			{
				return this.GetTable<RulingForViolation>();
			}
		}
		
		public System.Data.Linq.Table<ViolationImage> ViolationImages
		{
			get
			{
				return this.GetTable<ViolationImage>();
			}
		}
		
		public System.Data.Linq.Table<Violation> Violations
		{
			get
			{
				return this.GetTable<Violation>();
			}
		}
		
		public System.Data.Linq.Table<ViolationType> ViolationTypes
		{
			get
			{
				return this.GetTable<ViolationType>();
			}
		}
		
		public System.Data.Linq.Table<Violator> Violators
		{
			get
			{
				return this.GetTable<Violator>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefinitionAboutViolations")]
	public partial class DefinitionAboutViolation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DefinitionAboutViolationID;
		
		private string _FindedWeapons;
		
		private string _FindedAmmunitions;
		
		private string _FindedGunsHuntingAndFishing;
		
		private string _FindedNatureManagementProducts;
		
		private string _FindedDocuments;
		
		private string _KOAP;
		
		private string _FixingMethods;
		
		private int _Protocol_ProtocolID;
		
		private int _ViolatorDocumentID;
		
		private int _OrganisationID;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDefinitionAboutViolationIDChanging(int value);
    partial void OnDefinitionAboutViolationIDChanged();
    partial void OnFindedWeaponsChanging(string value);
    partial void OnFindedWeaponsChanged();
    partial void OnFindedAmmunitionsChanging(string value);
    partial void OnFindedAmmunitionsChanged();
    partial void OnFindedGunsHuntingAndFishingChanging(string value);
    partial void OnFindedGunsHuntingAndFishingChanged();
    partial void OnFindedNatureManagementProductsChanging(string value);
    partial void OnFindedNatureManagementProductsChanged();
    partial void OnFindedDocumentsChanging(string value);
    partial void OnFindedDocumentsChanged();
    partial void OnKOAPChanging(string value);
    partial void OnKOAPChanged();
    partial void OnFixingMethodsChanging(string value);
    partial void OnFixingMethodsChanged();
    partial void OnProtocol_ProtocolIDChanging(int value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnViolatorDocumentIDChanging(int value);
    partial void OnViolatorDocumentIDChanged();
    partial void OnOrganisationIDChanging(int value);
    partial void OnOrganisationIDChanged();
    #endregion
		
		public DefinitionAboutViolation()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefinitionAboutViolationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DefinitionAboutViolationID
		{
			get
			{
				return this._DefinitionAboutViolationID;
			}
			set
			{
				if ((this._DefinitionAboutViolationID != value))
				{
					this.OnDefinitionAboutViolationIDChanging(value);
					this.SendPropertyChanging();
					this._DefinitionAboutViolationID = value;
					this.SendPropertyChanged("DefinitionAboutViolationID");
					this.OnDefinitionAboutViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedWeapons", DbType="NVarChar(MAX)")]
		public string FindedWeapons
		{
			get
			{
				return this._FindedWeapons;
			}
			set
			{
				if ((this._FindedWeapons != value))
				{
					this.OnFindedWeaponsChanging(value);
					this.SendPropertyChanging();
					this._FindedWeapons = value;
					this.SendPropertyChanged("FindedWeapons");
					this.OnFindedWeaponsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedAmmunitions", DbType="NVarChar(MAX)")]
		public string FindedAmmunitions
		{
			get
			{
				return this._FindedAmmunitions;
			}
			set
			{
				if ((this._FindedAmmunitions != value))
				{
					this.OnFindedAmmunitionsChanging(value);
					this.SendPropertyChanging();
					this._FindedAmmunitions = value;
					this.SendPropertyChanged("FindedAmmunitions");
					this.OnFindedAmmunitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedGunsHuntingAndFishing", DbType="NVarChar(MAX)")]
		public string FindedGunsHuntingAndFishing
		{
			get
			{
				return this._FindedGunsHuntingAndFishing;
			}
			set
			{
				if ((this._FindedGunsHuntingAndFishing != value))
				{
					this.OnFindedGunsHuntingAndFishingChanging(value);
					this.SendPropertyChanging();
					this._FindedGunsHuntingAndFishing = value;
					this.SendPropertyChanged("FindedGunsHuntingAndFishing");
					this.OnFindedGunsHuntingAndFishingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedNatureManagementProducts", DbType="NVarChar(MAX)")]
		public string FindedNatureManagementProducts
		{
			get
			{
				return this._FindedNatureManagementProducts;
			}
			set
			{
				if ((this._FindedNatureManagementProducts != value))
				{
					this.OnFindedNatureManagementProductsChanging(value);
					this.SendPropertyChanging();
					this._FindedNatureManagementProducts = value;
					this.SendPropertyChanged("FindedNatureManagementProducts");
					this.OnFindedNatureManagementProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedDocuments", DbType="NVarChar(MAX)")]
		public string FindedDocuments
		{
			get
			{
				return this._FindedDocuments;
			}
			set
			{
				if ((this._FindedDocuments != value))
				{
					this.OnFindedDocumentsChanging(value);
					this.SendPropertyChanging();
					this._FindedDocuments = value;
					this.SendPropertyChanged("FindedDocuments");
					this.OnFindedDocumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOAP", DbType="NVarChar(MAX)")]
		public string KOAP
		{
			get
			{
				return this._KOAP;
			}
			set
			{
				if ((this._KOAP != value))
				{
					this.OnKOAPChanging(value);
					this.SendPropertyChanging();
					this._KOAP = value;
					this.SendPropertyChanged("KOAP");
					this.OnKOAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixingMethods", DbType="NVarChar(MAX)")]
		public string FixingMethods
		{
			get
			{
				return this._FixingMethods;
			}
			set
			{
				if ((this._FixingMethods != value))
				{
					this.OnFixingMethodsChanging(value);
					this.SendPropertyChanging();
					this._FixingMethods = value;
					this.SendPropertyChanged("FixingMethods");
					this.OnFixingMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int NOT NULL")]
		public int Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorDocumentID", DbType="Int NOT NULL")]
		public int ViolatorDocumentID
		{
			get
			{
				return this._ViolatorDocumentID;
			}
			set
			{
				if ((this._ViolatorDocumentID != value))
				{
					this.OnViolatorDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._ViolatorDocumentID = value;
					this.SendPropertyChanged("ViolatorDocumentID");
					this.OnViolatorDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationID", DbType="Int NOT NULL")]
		public int OrganisationID
		{
			get
			{
				return this._OrganisationID;
			}
			set
			{
				if ((this._OrganisationID != value))
				{
					this.OnOrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationID = value;
					this.SendPropertyChanged("OrganisationID");
					this.OnOrganisationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_DefinitionAboutViolation", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.DefinitionAboutViolations.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.DefinitionAboutViolations.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(int);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Documents")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentID;
		
		private string _Serial;
		
		private string _Number;
		
		private string _IssuedBy;
		
		private System.DateTime _WhenIssued;
		
		private string _CodeDevision;
		
		private System.Nullable<int> _Persone_UserID;
		
		private int _Document_DocumentTypeID;
		
		private EntitySet<Organisation> _Organisations;
		
		private EntityRef<Persone> _Persone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnIssuedByChanging(string value);
    partial void OnIssuedByChanged();
    partial void OnWhenIssuedChanging(System.DateTime value);
    partial void OnWhenIssuedChanged();
    partial void OnCodeDevisionChanging(string value);
    partial void OnCodeDevisionChanged();
    partial void OnPersone_UserIDChanging(System.Nullable<int> value);
    partial void OnPersone_UserIDChanged();
    partial void OnDocument_DocumentTypeIDChanging(int value);
    partial void OnDocument_DocumentTypeIDChanged();
    #endregion
		
		public Document()
		{
			this._Organisations = new EntitySet<Organisation>(new Action<Organisation>(this.attach_Organisations), new Action<Organisation>(this.detach_Organisations));
			this._Persone = default(EntityRef<Persone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuedBy", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string IssuedBy
		{
			get
			{
				return this._IssuedBy;
			}
			set
			{
				if ((this._IssuedBy != value))
				{
					this.OnIssuedByChanging(value);
					this.SendPropertyChanging();
					this._IssuedBy = value;
					this.SendPropertyChanged("IssuedBy");
					this.OnIssuedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhenIssued", DbType="DateTime NOT NULL")]
		public System.DateTime WhenIssued
		{
			get
			{
				return this._WhenIssued;
			}
			set
			{
				if ((this._WhenIssued != value))
				{
					this.OnWhenIssuedChanging(value);
					this.SendPropertyChanging();
					this._WhenIssued = value;
					this.SendPropertyChanged("WhenIssued");
					this.OnWhenIssuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeDevision", DbType="NVarChar(MAX)")]
		public string CodeDevision
		{
			get
			{
				return this._CodeDevision;
			}
			set
			{
				if ((this._CodeDevision != value))
				{
					this.OnCodeDevisionChanging(value);
					this.SendPropertyChanging();
					this._CodeDevision = value;
					this.SendPropertyChanged("CodeDevision");
					this.OnCodeDevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Persone_UserID", DbType="Int")]
		public System.Nullable<int> Persone_UserID
		{
			get
			{
				return this._Persone_UserID;
			}
			set
			{
				if ((this._Persone_UserID != value))
				{
					if (this._Persone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersone_UserIDChanging(value);
					this.SendPropertyChanging();
					this._Persone_UserID = value;
					this.SendPropertyChanged("Persone_UserID");
					this.OnPersone_UserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Document_DocumentTypeID", DbType="Int NOT NULL")]
		public int Document_DocumentTypeID
		{
			get
			{
				return this._Document_DocumentTypeID;
			}
			set
			{
				if ((this._Document_DocumentTypeID != value))
				{
					this.OnDocument_DocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._Document_DocumentTypeID = value;
					this.SendPropertyChanged("Document_DocumentTypeID");
					this.OnDocument_DocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Organisation", Storage="_Organisations", ThisKey="DocumentID", OtherKey="RepresentativeDocument_DocumentID")]
		public EntitySet<Organisation> Organisations
		{
			get
			{
				return this._Organisations;
			}
			set
			{
				this._Organisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persone_Document", Storage="_Persone", ThisKey="Persone_UserID", OtherKey="UserID", IsForeignKey=true)]
		public Persone Persone
		{
			get
			{
				return this._Persone.Entity;
			}
			set
			{
				Persone previousValue = this._Persone.Entity;
				if (((previousValue != value) 
							|| (this._Persone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persone.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._Persone.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._Persone_UserID = value.UserID;
					}
					else
					{
						this._Persone_UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Persone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organisations(Organisation entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_Organisations(Organisation entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentTypes")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentTypeID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentTypeIDChanging(int value);
    partial void OnDocumentTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public DocumentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					this.OnDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeID = value;
					this.SendPropertyChanged("DocumentTypeID");
					this.OnDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmploeyrPositions")]
	public partial class EmploeyrPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PositionID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionIDChanging(int value);
    partial void OnPositionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EmploeyrPosition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employers")]
	public partial class Employer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployerID;
		
		private int _ViolationID;
		
		private int _PersoneID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployerIDChanging(int value);
    partial void OnEmployerIDChanged();
    partial void OnViolationIDChanging(int value);
    partial void OnViolationIDChanged();
    partial void OnPersoneIDChanging(int value);
    partial void OnPersoneIDChanged();
    #endregion
		
		public Employer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployerID
		{
			get
			{
				return this._EmployerID;
			}
			set
			{
				if ((this._EmployerID != value))
				{
					this.OnEmployerIDChanging(value);
					this.SendPropertyChanging();
					this._EmployerID = value;
					this.SendPropertyChanged("EmployerID");
					this.OnEmployerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationID", DbType="Int NOT NULL")]
		public int ViolationID
		{
			get
			{
				return this._ViolationID;
			}
			set
			{
				if ((this._ViolationID != value))
				{
					this.OnViolationIDChanging(value);
					this.SendPropertyChanging();
					this._ViolationID = value;
					this.SendPropertyChanged("ViolationID");
					this.OnViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersoneID", DbType="Int NOT NULL")]
		public int PersoneID
		{
			get
			{
				return this._PersoneID;
			}
			set
			{
				if ((this._PersoneID != value))
				{
					this.OnPersoneIDChanging(value);
					this.SendPropertyChanging();
					this._PersoneID = value;
					this.SendPropertyChanged("PersoneID");
					this.OnPersoneIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InjunctionItems")]
	public partial class InjunctionItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InjunctionItemID;
		
		private string _Description;
		
		private string _Deedline;
		
		private string _BaseOrders;
		
		private System.Nullable<int> _Injunction_InjunctionID;
		
		private EntityRef<Injunction> _Injunction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInjunctionItemIDChanging(int value);
    partial void OnInjunctionItemIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeedlineChanging(string value);
    partial void OnDeedlineChanged();
    partial void OnBaseOrdersChanging(string value);
    partial void OnBaseOrdersChanged();
    partial void OnInjunction_InjunctionIDChanging(System.Nullable<int> value);
    partial void OnInjunction_InjunctionIDChanged();
    #endregion
		
		public InjunctionItem()
		{
			this._Injunction = default(EntityRef<Injunction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InjunctionItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InjunctionItemID
		{
			get
			{
				return this._InjunctionItemID;
			}
			set
			{
				if ((this._InjunctionItemID != value))
				{
					this.OnInjunctionItemIDChanging(value);
					this.SendPropertyChanging();
					this._InjunctionItemID = value;
					this.SendPropertyChanged("InjunctionItemID");
					this.OnInjunctionItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deedline", DbType="NVarChar(MAX)")]
		public string Deedline
		{
			get
			{
				return this._Deedline;
			}
			set
			{
				if ((this._Deedline != value))
				{
					this.OnDeedlineChanging(value);
					this.SendPropertyChanging();
					this._Deedline = value;
					this.SendPropertyChanged("Deedline");
					this.OnDeedlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseOrders", DbType="NVarChar(MAX)")]
		public string BaseOrders
		{
			get
			{
				return this._BaseOrders;
			}
			set
			{
				if ((this._BaseOrders != value))
				{
					this.OnBaseOrdersChanging(value);
					this.SendPropertyChanging();
					this._BaseOrders = value;
					this.SendPropertyChanged("BaseOrders");
					this.OnBaseOrdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Injunction_InjunctionID", DbType="Int")]
		public System.Nullable<int> Injunction_InjunctionID
		{
			get
			{
				return this._Injunction_InjunctionID;
			}
			set
			{
				if ((this._Injunction_InjunctionID != value))
				{
					if (this._Injunction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInjunction_InjunctionIDChanging(value);
					this.SendPropertyChanging();
					this._Injunction_InjunctionID = value;
					this.SendPropertyChanged("Injunction_InjunctionID");
					this.OnInjunction_InjunctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Injunction_InjunctionItem", Storage="_Injunction", ThisKey="Injunction_InjunctionID", OtherKey="InjunctionID", IsForeignKey=true)]
		public Injunction Injunction
		{
			get
			{
				return this._Injunction.Entity;
			}
			set
			{
				Injunction previousValue = this._Injunction.Entity;
				if (((previousValue != value) 
							|| (this._Injunction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Injunction.Entity = null;
						previousValue.InjunctionItems.Remove(this);
					}
					this._Injunction.Entity = value;
					if ((value != null))
					{
						value.InjunctionItems.Add(this);
						this._Injunction_InjunctionID = value.InjunctionID;
					}
					else
					{
						this._Injunction_InjunctionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Injunction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Injunctions")]
	public partial class Injunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InjunctionID;
		
		private System.DateTime _ActInspectionDate;
		
		private string _ActInspectionNumber;
		
		private string _InjunctionInfo;
		
		private System.Nullable<int> _Protocol_ProtocolID;
		
		private int _ViolatorDocumentID;
		
		private EntitySet<InjunctionItem> _InjunctionItems;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInjunctionIDChanging(int value);
    partial void OnInjunctionIDChanged();
    partial void OnActInspectionDateChanging(System.DateTime value);
    partial void OnActInspectionDateChanged();
    partial void OnActInspectionNumberChanging(string value);
    partial void OnActInspectionNumberChanged();
    partial void OnInjunctionInfoChanging(string value);
    partial void OnInjunctionInfoChanged();
    partial void OnProtocol_ProtocolIDChanging(System.Nullable<int> value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnViolatorDocumentIDChanging(int value);
    partial void OnViolatorDocumentIDChanged();
    #endregion
		
		public Injunction()
		{
			this._InjunctionItems = new EntitySet<InjunctionItem>(new Action<InjunctionItem>(this.attach_InjunctionItems), new Action<InjunctionItem>(this.detach_InjunctionItems));
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InjunctionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InjunctionID
		{
			get
			{
				return this._InjunctionID;
			}
			set
			{
				if ((this._InjunctionID != value))
				{
					this.OnInjunctionIDChanging(value);
					this.SendPropertyChanging();
					this._InjunctionID = value;
					this.SendPropertyChanged("InjunctionID");
					this.OnInjunctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActInspectionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActInspectionDate
		{
			get
			{
				return this._ActInspectionDate;
			}
			set
			{
				if ((this._ActInspectionDate != value))
				{
					this.OnActInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._ActInspectionDate = value;
					this.SendPropertyChanged("ActInspectionDate");
					this.OnActInspectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActInspectionNumber", DbType="NVarChar(MAX)")]
		public string ActInspectionNumber
		{
			get
			{
				return this._ActInspectionNumber;
			}
			set
			{
				if ((this._ActInspectionNumber != value))
				{
					this.OnActInspectionNumberChanging(value);
					this.SendPropertyChanging();
					this._ActInspectionNumber = value;
					this.SendPropertyChanged("ActInspectionNumber");
					this.OnActInspectionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InjunctionInfo", DbType="NVarChar(MAX)")]
		public string InjunctionInfo
		{
			get
			{
				return this._InjunctionInfo;
			}
			set
			{
				if ((this._InjunctionInfo != value))
				{
					this.OnInjunctionInfoChanging(value);
					this.SendPropertyChanging();
					this._InjunctionInfo = value;
					this.SendPropertyChanged("InjunctionInfo");
					this.OnInjunctionInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int")]
		public System.Nullable<int> Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorDocumentID", DbType="Int NOT NULL")]
		public int ViolatorDocumentID
		{
			get
			{
				return this._ViolatorDocumentID;
			}
			set
			{
				if ((this._ViolatorDocumentID != value))
				{
					this.OnViolatorDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._ViolatorDocumentID = value;
					this.SendPropertyChanged("ViolatorDocumentID");
					this.OnViolatorDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Injunction_InjunctionItem", Storage="_InjunctionItems", ThisKey="InjunctionID", OtherKey="Injunction_InjunctionID")]
		public EntitySet<InjunctionItem> InjunctionItems
		{
			get
			{
				return this._InjunctionItems;
			}
			set
			{
				this._InjunctionItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_Injunction", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true)]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.Injunctions.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.Injunctions.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InjunctionItems(InjunctionItem entity)
		{
			this.SendPropertyChanging();
			entity.Injunction = this;
		}
		
		private void detach_InjunctionItems(InjunctionItem entity)
		{
			this.SendPropertyChanging();
			entity.Injunction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Managers")]
	public partial class Manager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ManagerID;
		
		private string _Login;
		
		private string _Password;
		
		private string _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManagerIDChanging(int value);
    partial void OnManagerIDChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public Manager()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ManagerID
		{
			get
			{
				return this._ManagerID;
			}
			set
			{
				if ((this._ManagerID != value))
				{
					this.OnManagerIDChanging(value);
					this.SendPropertyChanging();
					this._ManagerID = value;
					this.SendPropertyChanged("ManagerID");
					this.OnManagerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisations")]
	public partial class Organisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrganisationID;
		
		private string _Name;
		
		private string _Format;
		
		private string _Info;
		
		private System.Nullable<int> _RepresentativeDocument_DocumentID;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganisationIDChanging(int value);
    partial void OnOrganisationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFormatChanging(string value);
    partial void OnFormatChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnRepresentativeDocument_DocumentIDChanging(System.Nullable<int> value);
    partial void OnRepresentativeDocument_DocumentIDChanged();
    #endregion
		
		public Organisation()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrganisationID
		{
			get
			{
				return this._OrganisationID;
			}
			set
			{
				if ((this._OrganisationID != value))
				{
					this.OnOrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationID = value;
					this.SendPropertyChanged("OrganisationID");
					this.OnOrganisationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Format", DbType="NVarChar(MAX)")]
		public string Format
		{
			get
			{
				return this._Format;
			}
			set
			{
				if ((this._Format != value))
				{
					this.OnFormatChanging(value);
					this.SendPropertyChanging();
					this._Format = value;
					this.SendPropertyChanged("Format");
					this.OnFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="NVarChar(MAX)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepresentativeDocument_DocumentID", DbType="Int")]
		public System.Nullable<int> RepresentativeDocument_DocumentID
		{
			get
			{
				return this._RepresentativeDocument_DocumentID;
			}
			set
			{
				if ((this._RepresentativeDocument_DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepresentativeDocument_DocumentIDChanging(value);
					this.SendPropertyChanging();
					this._RepresentativeDocument_DocumentID = value;
					this.SendPropertyChanged("RepresentativeDocument_DocumentID");
					this.OnRepresentativeDocument_DocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Organisation", Storage="_Document", ThisKey="RepresentativeDocument_DocumentID", OtherKey="DocumentID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.Organisations.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.Organisations.Add(this);
						this._RepresentativeDocument_DocumentID = value.DocumentID;
					}
					else
					{
						this._RepresentativeDocument_DocumentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersoneAddresses")]
	public partial class PersoneAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressID;
		
		private string _Country;
		
		private string _Subject;
		
		private string _Area;
		
		private string _City;
		
		private string _Street;
		
		private string _HomeNumber;
		
		private string _Flat;
		
		private string _Note;
		
		private int _Persone_UserID;
		
		private EntityRef<Persone> _Persone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnHomeNumberChanging(string value);
    partial void OnHomeNumberChanged();
    partial void OnFlatChanging(string value);
    partial void OnFlatChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnPersone_UserIDChanging(int value);
    partial void OnPersone_UserIDChanged();
    #endregion
		
		public PersoneAddress()
		{
			this._Persone = default(EntityRef<Persone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(MAX)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(MAX)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(MAX)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeNumber", DbType="NVarChar(MAX)")]
		public string HomeNumber
		{
			get
			{
				return this._HomeNumber;
			}
			set
			{
				if ((this._HomeNumber != value))
				{
					this.OnHomeNumberChanging(value);
					this.SendPropertyChanging();
					this._HomeNumber = value;
					this.SendPropertyChanged("HomeNumber");
					this.OnHomeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flat", DbType="NVarChar(MAX)")]
		public string Flat
		{
			get
			{
				return this._Flat;
			}
			set
			{
				if ((this._Flat != value))
				{
					this.OnFlatChanging(value);
					this.SendPropertyChanging();
					this._Flat = value;
					this.SendPropertyChanged("Flat");
					this.OnFlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Persone_UserID", DbType="Int NOT NULL")]
		public int Persone_UserID
		{
			get
			{
				return this._Persone_UserID;
			}
			set
			{
				if ((this._Persone_UserID != value))
				{
					if (this._Persone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersone_UserIDChanging(value);
					this.SendPropertyChanging();
					this._Persone_UserID = value;
					this.SendPropertyChanged("Persone_UserID");
					this.OnPersone_UserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persone_PersoneAddress", Storage="_Persone", ThisKey="Persone_UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Persone Persone
		{
			get
			{
				return this._Persone.Entity;
			}
			set
			{
				Persone previousValue = this._Persone.Entity;
				if (((previousValue != value) 
							|| (this._Persone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persone.Entity = null;
						previousValue.PersoneAddresses.Remove(this);
					}
					this._Persone.Entity = value;
					if ((value != null))
					{
						value.PersoneAddresses.Add(this);
						this._Persone_UserID = value.UserID;
					}
					else
					{
						this._Persone_UserID = default(int);
					}
					this.SendPropertyChanged("Persone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persones")]
	public partial class Persone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private bool _IsEmploeyr;
		
		private string _FirstName;
		
		private string _SecondName;
		
		private string _MiddleName;
		
		private System.DateTime _DateBirthday;
		
		private System.Data.Linq.Binary _Image;
		
		private int _Position_PositionID;
		
		private string _PlaceOfBirth;
		
		private System.DateTime _WasBeCreated;
		
		private System.DateTime _WasBeUpdated;
		
		private string _PlaceWork;
		
		private bool _Deleted;
		
		private EntitySet<Document> _Documents;
		
		private EntitySet<PersoneAddress> _PersoneAddresses;
		
		private EntitySet<Phone> _Phones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIsEmploeyrChanging(bool value);
    partial void OnIsEmploeyrChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnSecondNameChanging(string value);
    partial void OnSecondNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnDateBirthdayChanging(System.DateTime value);
    partial void OnDateBirthdayChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnPosition_PositionIDChanging(int value);
    partial void OnPosition_PositionIDChanged();
    partial void OnPlaceOfBirthChanging(string value);
    partial void OnPlaceOfBirthChanged();
    partial void OnWasBeCreatedChanging(System.DateTime value);
    partial void OnWasBeCreatedChanged();
    partial void OnWasBeUpdatedChanging(System.DateTime value);
    partial void OnWasBeUpdatedChanged();
    partial void OnPlaceWorkChanging(string value);
    partial void OnPlaceWorkChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Persone()
		{
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			this._PersoneAddresses = new EntitySet<PersoneAddress>(new Action<PersoneAddress>(this.attach_PersoneAddresses), new Action<PersoneAddress>(this.detach_PersoneAddresses));
			this._Phones = new EntitySet<Phone>(new Action<Phone>(this.attach_Phones), new Action<Phone>(this.detach_Phones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmploeyr", DbType="Bit NOT NULL")]
		public bool IsEmploeyr
		{
			get
			{
				return this._IsEmploeyr;
			}
			set
			{
				if ((this._IsEmploeyr != value))
				{
					this.OnIsEmploeyrChanging(value);
					this.SendPropertyChanging();
					this._IsEmploeyr = value;
					this.SendPropertyChanged("IsEmploeyr");
					this.OnIsEmploeyrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this.OnSecondNameChanging(value);
					this.SendPropertyChanging();
					this._SecondName = value;
					this.SendPropertyChanged("SecondName");
					this.OnSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBirthday", DbType="DateTime NOT NULL")]
		public System.DateTime DateBirthday
		{
			get
			{
				return this._DateBirthday;
			}
			set
			{
				if ((this._DateBirthday != value))
				{
					this.OnDateBirthdayChanging(value);
					this.SendPropertyChanging();
					this._DateBirthday = value;
					this.SendPropertyChanged("DateBirthday");
					this.OnDateBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position_PositionID", DbType="Int NOT NULL")]
		public int Position_PositionID
		{
			get
			{
				return this._Position_PositionID;
			}
			set
			{
				if ((this._Position_PositionID != value))
				{
					this.OnPosition_PositionIDChanging(value);
					this.SendPropertyChanging();
					this._Position_PositionID = value;
					this.SendPropertyChanged("Position_PositionID");
					this.OnPosition_PositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfBirth", DbType="NVarChar(MAX)")]
		public string PlaceOfBirth
		{
			get
			{
				return this._PlaceOfBirth;
			}
			set
			{
				if ((this._PlaceOfBirth != value))
				{
					this.OnPlaceOfBirthChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfBirth = value;
					this.SendPropertyChanged("PlaceOfBirth");
					this.OnPlaceOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasBeCreated", DbType="DateTime NOT NULL")]
		public System.DateTime WasBeCreated
		{
			get
			{
				return this._WasBeCreated;
			}
			set
			{
				if ((this._WasBeCreated != value))
				{
					this.OnWasBeCreatedChanging(value);
					this.SendPropertyChanging();
					this._WasBeCreated = value;
					this.SendPropertyChanged("WasBeCreated");
					this.OnWasBeCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasBeUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime WasBeUpdated
		{
			get
			{
				return this._WasBeUpdated;
			}
			set
			{
				if ((this._WasBeUpdated != value))
				{
					this.OnWasBeUpdatedChanging(value);
					this.SendPropertyChanging();
					this._WasBeUpdated = value;
					this.SendPropertyChanged("WasBeUpdated");
					this.OnWasBeUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceWork", DbType="NVarChar(MAX)")]
		public string PlaceWork
		{
			get
			{
				return this._PlaceWork;
			}
			set
			{
				if ((this._PlaceWork != value))
				{
					this.OnPlaceWorkChanging(value);
					this.SendPropertyChanging();
					this._PlaceWork = value;
					this.SendPropertyChanged("PlaceWork");
					this.OnPlaceWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persone_Document", Storage="_Documents", ThisKey="UserID", OtherKey="Persone_UserID")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persone_PersoneAddress", Storage="_PersoneAddresses", ThisKey="UserID", OtherKey="Persone_UserID")]
		public EntitySet<PersoneAddress> PersoneAddresses
		{
			get
			{
				return this._PersoneAddresses;
			}
			set
			{
				this._PersoneAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persone_Phone", Storage="_Phones", ThisKey="UserID", OtherKey="Persone_UserID")]
		public EntitySet<Phone> Phones
		{
			get
			{
				return this._Phones;
			}
			set
			{
				this._Phones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Persone = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Persone = null;
		}
		
		private void attach_PersoneAddresses(PersoneAddress entity)
		{
			this.SendPropertyChanging();
			entity.Persone = this;
		}
		
		private void detach_PersoneAddresses(PersoneAddress entity)
		{
			this.SendPropertyChanging();
			entity.Persone = null;
		}
		
		private void attach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.Persone = this;
		}
		
		private void detach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.Persone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phones")]
	public partial class Phone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneID;
		
		private string _PhoneNumber;
		
		private System.Nullable<int> _Persone_UserID;
		
		private EntityRef<Persone> _Persone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneIDChanging(int value);
    partial void OnPhoneIDChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPersone_UserIDChanging(System.Nullable<int> value);
    partial void OnPersone_UserIDChanged();
    #endregion
		
		public Phone()
		{
			this._Persone = default(EntityRef<Persone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneID
		{
			get
			{
				return this._PhoneID;
			}
			set
			{
				if ((this._PhoneID != value))
				{
					this.OnPhoneIDChanging(value);
					this.SendPropertyChanging();
					this._PhoneID = value;
					this.SendPropertyChanged("PhoneID");
					this.OnPhoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Persone_UserID", DbType="Int")]
		public System.Nullable<int> Persone_UserID
		{
			get
			{
				return this._Persone_UserID;
			}
			set
			{
				if ((this._Persone_UserID != value))
				{
					if (this._Persone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersone_UserIDChanging(value);
					this.SendPropertyChanging();
					this._Persone_UserID = value;
					this.SendPropertyChanged("Persone_UserID");
					this.OnPersone_UserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persone_Phone", Storage="_Persone", ThisKey="Persone_UserID", OtherKey="UserID", IsForeignKey=true)]
		public Persone Persone
		{
			get
			{
				return this._Persone.Entity;
			}
			set
			{
				Persone previousValue = this._Persone.Entity;
				if (((previousValue != value) 
							|| (this._Persone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persone.Entity = null;
						previousValue.Phones.Remove(this);
					}
					this._Persone.Entity = value;
					if ((value != null))
					{
						value.Phones.Add(this);
						this._Persone_UserID = value.UserID;
					}
					else
					{
						this._Persone_UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Persone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProtocolAboutArrests")]
	public partial class ProtocolAboutArrest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProtocolAboutArrestID;
		
		private string _AboutViolator;
		
		private string _AboutCar;
		
		private string _AboutOtherThings;
		
		private string _ThingsWasTransfer;
		
		private string _FixingMethods;
		
		private int _Protocol_ProtocolID;
		
		private int _ViolatorDocumentID;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProtocolAboutArrestIDChanging(int value);
    partial void OnProtocolAboutArrestIDChanged();
    partial void OnAboutViolatorChanging(string value);
    partial void OnAboutViolatorChanged();
    partial void OnAboutCarChanging(string value);
    partial void OnAboutCarChanged();
    partial void OnAboutOtherThingsChanging(string value);
    partial void OnAboutOtherThingsChanged();
    partial void OnThingsWasTransferChanging(string value);
    partial void OnThingsWasTransferChanged();
    partial void OnFixingMethodsChanging(string value);
    partial void OnFixingMethodsChanged();
    partial void OnProtocol_ProtocolIDChanging(int value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnViolatorDocumentIDChanging(int value);
    partial void OnViolatorDocumentIDChanged();
    #endregion
		
		public ProtocolAboutArrest()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolAboutArrestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProtocolAboutArrestID
		{
			get
			{
				return this._ProtocolAboutArrestID;
			}
			set
			{
				if ((this._ProtocolAboutArrestID != value))
				{
					this.OnProtocolAboutArrestIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolAboutArrestID = value;
					this.SendPropertyChanged("ProtocolAboutArrestID");
					this.OnProtocolAboutArrestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutViolator", DbType="NVarChar(MAX)")]
		public string AboutViolator
		{
			get
			{
				return this._AboutViolator;
			}
			set
			{
				if ((this._AboutViolator != value))
				{
					this.OnAboutViolatorChanging(value);
					this.SendPropertyChanging();
					this._AboutViolator = value;
					this.SendPropertyChanged("AboutViolator");
					this.OnAboutViolatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutCar", DbType="NVarChar(MAX)")]
		public string AboutCar
		{
			get
			{
				return this._AboutCar;
			}
			set
			{
				if ((this._AboutCar != value))
				{
					this.OnAboutCarChanging(value);
					this.SendPropertyChanging();
					this._AboutCar = value;
					this.SendPropertyChanged("AboutCar");
					this.OnAboutCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutOtherThings", DbType="NVarChar(MAX)")]
		public string AboutOtherThings
		{
			get
			{
				return this._AboutOtherThings;
			}
			set
			{
				if ((this._AboutOtherThings != value))
				{
					this.OnAboutOtherThingsChanging(value);
					this.SendPropertyChanging();
					this._AboutOtherThings = value;
					this.SendPropertyChanged("AboutOtherThings");
					this.OnAboutOtherThingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThingsWasTransfer", DbType="NVarChar(MAX)")]
		public string ThingsWasTransfer
		{
			get
			{
				return this._ThingsWasTransfer;
			}
			set
			{
				if ((this._ThingsWasTransfer != value))
				{
					this.OnThingsWasTransferChanging(value);
					this.SendPropertyChanging();
					this._ThingsWasTransfer = value;
					this.SendPropertyChanged("ThingsWasTransfer");
					this.OnThingsWasTransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixingMethods", DbType="NVarChar(MAX)")]
		public string FixingMethods
		{
			get
			{
				return this._FixingMethods;
			}
			set
			{
				if ((this._FixingMethods != value))
				{
					this.OnFixingMethodsChanging(value);
					this.SendPropertyChanging();
					this._FixingMethods = value;
					this.SendPropertyChanged("FixingMethods");
					this.OnFixingMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int NOT NULL")]
		public int Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorDocumentID", DbType="Int NOT NULL")]
		public int ViolatorDocumentID
		{
			get
			{
				return this._ViolatorDocumentID;
			}
			set
			{
				if ((this._ViolatorDocumentID != value))
				{
					this.OnViolatorDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._ViolatorDocumentID = value;
					this.SendPropertyChanged("ViolatorDocumentID");
					this.OnViolatorDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutArrest", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.ProtocolAboutArrests.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.ProtocolAboutArrests.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(int);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProtocolAboutBringings")]
	public partial class ProtocolAboutBringing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProtocolAboutBringingID;
		
		private string _FindedWeapons;
		
		private string _FindedAmmunitions;
		
		private string _FindedGunsHuntingAndFishing;
		
		private string _FindedNatureManagementProducts;
		
		private string _FindedDocuments;
		
		private string _WithdrawWeapons;
		
		private string _WithdrawAmmunitions;
		
		private string _WithdrawGunsHuntingAndFishing;
		
		private string _WithdrawNatureManagementProducts;
		
		private string _WithdrawDocuments;
		
		private string _FixingMethods;
		
		private int _Protocol_ProtocolID;
		
		private int _ViolatorDocumentID;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProtocolAboutBringingIDChanging(int value);
    partial void OnProtocolAboutBringingIDChanged();
    partial void OnFindedWeaponsChanging(string value);
    partial void OnFindedWeaponsChanged();
    partial void OnFindedAmmunitionsChanging(string value);
    partial void OnFindedAmmunitionsChanged();
    partial void OnFindedGunsHuntingAndFishingChanging(string value);
    partial void OnFindedGunsHuntingAndFishingChanged();
    partial void OnFindedNatureManagementProductsChanging(string value);
    partial void OnFindedNatureManagementProductsChanged();
    partial void OnFindedDocumentsChanging(string value);
    partial void OnFindedDocumentsChanged();
    partial void OnWithdrawWeaponsChanging(string value);
    partial void OnWithdrawWeaponsChanged();
    partial void OnWithdrawAmmunitionsChanging(string value);
    partial void OnWithdrawAmmunitionsChanged();
    partial void OnWithdrawGunsHuntingAndFishingChanging(string value);
    partial void OnWithdrawGunsHuntingAndFishingChanged();
    partial void OnWithdrawNatureManagementProductsChanging(string value);
    partial void OnWithdrawNatureManagementProductsChanged();
    partial void OnWithdrawDocumentsChanging(string value);
    partial void OnWithdrawDocumentsChanged();
    partial void OnFixingMethodsChanging(string value);
    partial void OnFixingMethodsChanged();
    partial void OnProtocol_ProtocolIDChanging(int value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnViolatorDocumentIDChanging(int value);
    partial void OnViolatorDocumentIDChanged();
    #endregion
		
		public ProtocolAboutBringing()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolAboutBringingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProtocolAboutBringingID
		{
			get
			{
				return this._ProtocolAboutBringingID;
			}
			set
			{
				if ((this._ProtocolAboutBringingID != value))
				{
					this.OnProtocolAboutBringingIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolAboutBringingID = value;
					this.SendPropertyChanged("ProtocolAboutBringingID");
					this.OnProtocolAboutBringingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedWeapons", DbType="NVarChar(MAX)")]
		public string FindedWeapons
		{
			get
			{
				return this._FindedWeapons;
			}
			set
			{
				if ((this._FindedWeapons != value))
				{
					this.OnFindedWeaponsChanging(value);
					this.SendPropertyChanging();
					this._FindedWeapons = value;
					this.SendPropertyChanged("FindedWeapons");
					this.OnFindedWeaponsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedAmmunitions", DbType="NVarChar(MAX)")]
		public string FindedAmmunitions
		{
			get
			{
				return this._FindedAmmunitions;
			}
			set
			{
				if ((this._FindedAmmunitions != value))
				{
					this.OnFindedAmmunitionsChanging(value);
					this.SendPropertyChanging();
					this._FindedAmmunitions = value;
					this.SendPropertyChanged("FindedAmmunitions");
					this.OnFindedAmmunitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedGunsHuntingAndFishing", DbType="NVarChar(MAX)")]
		public string FindedGunsHuntingAndFishing
		{
			get
			{
				return this._FindedGunsHuntingAndFishing;
			}
			set
			{
				if ((this._FindedGunsHuntingAndFishing != value))
				{
					this.OnFindedGunsHuntingAndFishingChanging(value);
					this.SendPropertyChanging();
					this._FindedGunsHuntingAndFishing = value;
					this.SendPropertyChanged("FindedGunsHuntingAndFishing");
					this.OnFindedGunsHuntingAndFishingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedNatureManagementProducts", DbType="NVarChar(MAX)")]
		public string FindedNatureManagementProducts
		{
			get
			{
				return this._FindedNatureManagementProducts;
			}
			set
			{
				if ((this._FindedNatureManagementProducts != value))
				{
					this.OnFindedNatureManagementProductsChanging(value);
					this.SendPropertyChanging();
					this._FindedNatureManagementProducts = value;
					this.SendPropertyChanged("FindedNatureManagementProducts");
					this.OnFindedNatureManagementProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedDocuments", DbType="NVarChar(MAX)")]
		public string FindedDocuments
		{
			get
			{
				return this._FindedDocuments;
			}
			set
			{
				if ((this._FindedDocuments != value))
				{
					this.OnFindedDocumentsChanging(value);
					this.SendPropertyChanging();
					this._FindedDocuments = value;
					this.SendPropertyChanged("FindedDocuments");
					this.OnFindedDocumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawWeapons", DbType="NVarChar(MAX)")]
		public string WithdrawWeapons
		{
			get
			{
				return this._WithdrawWeapons;
			}
			set
			{
				if ((this._WithdrawWeapons != value))
				{
					this.OnWithdrawWeaponsChanging(value);
					this.SendPropertyChanging();
					this._WithdrawWeapons = value;
					this.SendPropertyChanged("WithdrawWeapons");
					this.OnWithdrawWeaponsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawAmmunitions", DbType="NVarChar(MAX)")]
		public string WithdrawAmmunitions
		{
			get
			{
				return this._WithdrawAmmunitions;
			}
			set
			{
				if ((this._WithdrawAmmunitions != value))
				{
					this.OnWithdrawAmmunitionsChanging(value);
					this.SendPropertyChanging();
					this._WithdrawAmmunitions = value;
					this.SendPropertyChanged("WithdrawAmmunitions");
					this.OnWithdrawAmmunitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawGunsHuntingAndFishing", DbType="NVarChar(MAX)")]
		public string WithdrawGunsHuntingAndFishing
		{
			get
			{
				return this._WithdrawGunsHuntingAndFishing;
			}
			set
			{
				if ((this._WithdrawGunsHuntingAndFishing != value))
				{
					this.OnWithdrawGunsHuntingAndFishingChanging(value);
					this.SendPropertyChanging();
					this._WithdrawGunsHuntingAndFishing = value;
					this.SendPropertyChanged("WithdrawGunsHuntingAndFishing");
					this.OnWithdrawGunsHuntingAndFishingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawNatureManagementProducts", DbType="NVarChar(MAX)")]
		public string WithdrawNatureManagementProducts
		{
			get
			{
				return this._WithdrawNatureManagementProducts;
			}
			set
			{
				if ((this._WithdrawNatureManagementProducts != value))
				{
					this.OnWithdrawNatureManagementProductsChanging(value);
					this.SendPropertyChanging();
					this._WithdrawNatureManagementProducts = value;
					this.SendPropertyChanged("WithdrawNatureManagementProducts");
					this.OnWithdrawNatureManagementProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawDocuments", DbType="NVarChar(MAX)")]
		public string WithdrawDocuments
		{
			get
			{
				return this._WithdrawDocuments;
			}
			set
			{
				if ((this._WithdrawDocuments != value))
				{
					this.OnWithdrawDocumentsChanging(value);
					this.SendPropertyChanging();
					this._WithdrawDocuments = value;
					this.SendPropertyChanged("WithdrawDocuments");
					this.OnWithdrawDocumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixingMethods", DbType="NVarChar(MAX)")]
		public string FixingMethods
		{
			get
			{
				return this._FixingMethods;
			}
			set
			{
				if ((this._FixingMethods != value))
				{
					this.OnFixingMethodsChanging(value);
					this.SendPropertyChanging();
					this._FixingMethods = value;
					this.SendPropertyChanged("FixingMethods");
					this.OnFixingMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int NOT NULL")]
		public int Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorDocumentID", DbType="Int NOT NULL")]
		public int ViolatorDocumentID
		{
			get
			{
				return this._ViolatorDocumentID;
			}
			set
			{
				if ((this._ViolatorDocumentID != value))
				{
					this.OnViolatorDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._ViolatorDocumentID = value;
					this.SendPropertyChanged("ViolatorDocumentID");
					this.OnViolatorDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutBringing", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.ProtocolAboutBringings.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.ProtocolAboutBringings.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(int);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProtocolAboutInspectionAutoes")]
	public partial class ProtocolAboutInspectionAutoe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProtocolAboutInspectionAutoID;
		
		private string _InformationAbouCar;
		
		private string _FindedWeapons;
		
		private string _FindedAmmunitions;
		
		private string _FindedGunsHuntingAndFishing;
		
		private string _FindedNatureManagementProducts;
		
		private string _FindedDocuments;
		
		private string _FixingMethods;
		
		private int _Protocol_ProtocolID;
		
		private int _ViolatorDocumentID;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProtocolAboutInspectionAutoIDChanging(int value);
    partial void OnProtocolAboutInspectionAutoIDChanged();
    partial void OnInformationAbouCarChanging(string value);
    partial void OnInformationAbouCarChanged();
    partial void OnFindedWeaponsChanging(string value);
    partial void OnFindedWeaponsChanged();
    partial void OnFindedAmmunitionsChanging(string value);
    partial void OnFindedAmmunitionsChanged();
    partial void OnFindedGunsHuntingAndFishingChanging(string value);
    partial void OnFindedGunsHuntingAndFishingChanged();
    partial void OnFindedNatureManagementProductsChanging(string value);
    partial void OnFindedNatureManagementProductsChanged();
    partial void OnFindedDocumentsChanging(string value);
    partial void OnFindedDocumentsChanged();
    partial void OnFixingMethodsChanging(string value);
    partial void OnFixingMethodsChanged();
    partial void OnProtocol_ProtocolIDChanging(int value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnViolatorDocumentIDChanging(int value);
    partial void OnViolatorDocumentIDChanged();
    #endregion
		
		public ProtocolAboutInspectionAutoe()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolAboutInspectionAutoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProtocolAboutInspectionAutoID
		{
			get
			{
				return this._ProtocolAboutInspectionAutoID;
			}
			set
			{
				if ((this._ProtocolAboutInspectionAutoID != value))
				{
					this.OnProtocolAboutInspectionAutoIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolAboutInspectionAutoID = value;
					this.SendPropertyChanged("ProtocolAboutInspectionAutoID");
					this.OnProtocolAboutInspectionAutoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InformationAbouCar", DbType="NVarChar(MAX)")]
		public string InformationAbouCar
		{
			get
			{
				return this._InformationAbouCar;
			}
			set
			{
				if ((this._InformationAbouCar != value))
				{
					this.OnInformationAbouCarChanging(value);
					this.SendPropertyChanging();
					this._InformationAbouCar = value;
					this.SendPropertyChanged("InformationAbouCar");
					this.OnInformationAbouCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedWeapons", DbType="NVarChar(MAX)")]
		public string FindedWeapons
		{
			get
			{
				return this._FindedWeapons;
			}
			set
			{
				if ((this._FindedWeapons != value))
				{
					this.OnFindedWeaponsChanging(value);
					this.SendPropertyChanging();
					this._FindedWeapons = value;
					this.SendPropertyChanged("FindedWeapons");
					this.OnFindedWeaponsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedAmmunitions", DbType="NVarChar(MAX)")]
		public string FindedAmmunitions
		{
			get
			{
				return this._FindedAmmunitions;
			}
			set
			{
				if ((this._FindedAmmunitions != value))
				{
					this.OnFindedAmmunitionsChanging(value);
					this.SendPropertyChanging();
					this._FindedAmmunitions = value;
					this.SendPropertyChanged("FindedAmmunitions");
					this.OnFindedAmmunitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedGunsHuntingAndFishing", DbType="NVarChar(MAX)")]
		public string FindedGunsHuntingAndFishing
		{
			get
			{
				return this._FindedGunsHuntingAndFishing;
			}
			set
			{
				if ((this._FindedGunsHuntingAndFishing != value))
				{
					this.OnFindedGunsHuntingAndFishingChanging(value);
					this.SendPropertyChanging();
					this._FindedGunsHuntingAndFishing = value;
					this.SendPropertyChanged("FindedGunsHuntingAndFishing");
					this.OnFindedGunsHuntingAndFishingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedNatureManagementProducts", DbType="NVarChar(MAX)")]
		public string FindedNatureManagementProducts
		{
			get
			{
				return this._FindedNatureManagementProducts;
			}
			set
			{
				if ((this._FindedNatureManagementProducts != value))
				{
					this.OnFindedNatureManagementProductsChanging(value);
					this.SendPropertyChanging();
					this._FindedNatureManagementProducts = value;
					this.SendPropertyChanged("FindedNatureManagementProducts");
					this.OnFindedNatureManagementProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedDocuments", DbType="NVarChar(MAX)")]
		public string FindedDocuments
		{
			get
			{
				return this._FindedDocuments;
			}
			set
			{
				if ((this._FindedDocuments != value))
				{
					this.OnFindedDocumentsChanging(value);
					this.SendPropertyChanging();
					this._FindedDocuments = value;
					this.SendPropertyChanged("FindedDocuments");
					this.OnFindedDocumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixingMethods", DbType="NVarChar(MAX)")]
		public string FixingMethods
		{
			get
			{
				return this._FixingMethods;
			}
			set
			{
				if ((this._FixingMethods != value))
				{
					this.OnFixingMethodsChanging(value);
					this.SendPropertyChanging();
					this._FixingMethods = value;
					this.SendPropertyChanged("FixingMethods");
					this.OnFixingMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int NOT NULL")]
		public int Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorDocumentID", DbType="Int NOT NULL")]
		public int ViolatorDocumentID
		{
			get
			{
				return this._ViolatorDocumentID;
			}
			set
			{
				if ((this._ViolatorDocumentID != value))
				{
					this.OnViolatorDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._ViolatorDocumentID = value;
					this.SendPropertyChanged("ViolatorDocumentID");
					this.OnViolatorDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutInspectionAutoe", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.ProtocolAboutInspectionAutoes.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.ProtocolAboutInspectionAutoes.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(int);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProtocolAboutInspectionOrganisations")]
	public partial class ProtocolAboutInspectionOrganisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProtocolAboutInspectionOrganisationID;
		
		private string _InspectionTerritoryes;
		
		private string _FindedWeapons;
		
		private string _FindedAmmunitions;
		
		private string _FindedGunsHuntingAndFishing;
		
		private string _FindedNatureManagementProducts;
		
		private string _FindedDocuments;
		
		private string _FixingMethods;
		
		private int _Protocol_ProtocolID;
		
		private int _OrganisationID;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProtocolAboutInspectionOrganisationIDChanging(int value);
    partial void OnProtocolAboutInspectionOrganisationIDChanged();
    partial void OnInspectionTerritoryesChanging(string value);
    partial void OnInspectionTerritoryesChanged();
    partial void OnFindedWeaponsChanging(string value);
    partial void OnFindedWeaponsChanged();
    partial void OnFindedAmmunitionsChanging(string value);
    partial void OnFindedAmmunitionsChanged();
    partial void OnFindedGunsHuntingAndFishingChanging(string value);
    partial void OnFindedGunsHuntingAndFishingChanged();
    partial void OnFindedNatureManagementProductsChanging(string value);
    partial void OnFindedNatureManagementProductsChanged();
    partial void OnFindedDocumentsChanging(string value);
    partial void OnFindedDocumentsChanged();
    partial void OnFixingMethodsChanging(string value);
    partial void OnFixingMethodsChanged();
    partial void OnProtocol_ProtocolIDChanging(int value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnOrganisationIDChanging(int value);
    partial void OnOrganisationIDChanged();
    #endregion
		
		public ProtocolAboutInspectionOrganisation()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolAboutInspectionOrganisationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProtocolAboutInspectionOrganisationID
		{
			get
			{
				return this._ProtocolAboutInspectionOrganisationID;
			}
			set
			{
				if ((this._ProtocolAboutInspectionOrganisationID != value))
				{
					this.OnProtocolAboutInspectionOrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolAboutInspectionOrganisationID = value;
					this.SendPropertyChanged("ProtocolAboutInspectionOrganisationID");
					this.OnProtocolAboutInspectionOrganisationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionTerritoryes", DbType="NVarChar(MAX)")]
		public string InspectionTerritoryes
		{
			get
			{
				return this._InspectionTerritoryes;
			}
			set
			{
				if ((this._InspectionTerritoryes != value))
				{
					this.OnInspectionTerritoryesChanging(value);
					this.SendPropertyChanging();
					this._InspectionTerritoryes = value;
					this.SendPropertyChanged("InspectionTerritoryes");
					this.OnInspectionTerritoryesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedWeapons", DbType="NVarChar(MAX)")]
		public string FindedWeapons
		{
			get
			{
				return this._FindedWeapons;
			}
			set
			{
				if ((this._FindedWeapons != value))
				{
					this.OnFindedWeaponsChanging(value);
					this.SendPropertyChanging();
					this._FindedWeapons = value;
					this.SendPropertyChanged("FindedWeapons");
					this.OnFindedWeaponsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedAmmunitions", DbType="NVarChar(MAX)")]
		public string FindedAmmunitions
		{
			get
			{
				return this._FindedAmmunitions;
			}
			set
			{
				if ((this._FindedAmmunitions != value))
				{
					this.OnFindedAmmunitionsChanging(value);
					this.SendPropertyChanging();
					this._FindedAmmunitions = value;
					this.SendPropertyChanged("FindedAmmunitions");
					this.OnFindedAmmunitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedGunsHuntingAndFishing", DbType="NVarChar(MAX)")]
		public string FindedGunsHuntingAndFishing
		{
			get
			{
				return this._FindedGunsHuntingAndFishing;
			}
			set
			{
				if ((this._FindedGunsHuntingAndFishing != value))
				{
					this.OnFindedGunsHuntingAndFishingChanging(value);
					this.SendPropertyChanging();
					this._FindedGunsHuntingAndFishing = value;
					this.SendPropertyChanged("FindedGunsHuntingAndFishing");
					this.OnFindedGunsHuntingAndFishingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedNatureManagementProducts", DbType="NVarChar(MAX)")]
		public string FindedNatureManagementProducts
		{
			get
			{
				return this._FindedNatureManagementProducts;
			}
			set
			{
				if ((this._FindedNatureManagementProducts != value))
				{
					this.OnFindedNatureManagementProductsChanging(value);
					this.SendPropertyChanging();
					this._FindedNatureManagementProducts = value;
					this.SendPropertyChanged("FindedNatureManagementProducts");
					this.OnFindedNatureManagementProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedDocuments", DbType="NVarChar(MAX)")]
		public string FindedDocuments
		{
			get
			{
				return this._FindedDocuments;
			}
			set
			{
				if ((this._FindedDocuments != value))
				{
					this.OnFindedDocumentsChanging(value);
					this.SendPropertyChanging();
					this._FindedDocuments = value;
					this.SendPropertyChanged("FindedDocuments");
					this.OnFindedDocumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixingMethods", DbType="NVarChar(MAX)")]
		public string FixingMethods
		{
			get
			{
				return this._FixingMethods;
			}
			set
			{
				if ((this._FixingMethods != value))
				{
					this.OnFixingMethodsChanging(value);
					this.SendPropertyChanging();
					this._FixingMethods = value;
					this.SendPropertyChanged("FixingMethods");
					this.OnFixingMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int NOT NULL")]
		public int Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationID", DbType="Int NOT NULL")]
		public int OrganisationID
		{
			get
			{
				return this._OrganisationID;
			}
			set
			{
				if ((this._OrganisationID != value))
				{
					this.OnOrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationID = value;
					this.SendPropertyChanged("OrganisationID");
					this.OnOrganisationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutInspectionOrganisation", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.ProtocolAboutInspectionOrganisations.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.ProtocolAboutInspectionOrganisations.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(int);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProtocolAboutInspections")]
	public partial class ProtocolAboutInspection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProtocolAboutInspectionID;
		
		private string _FindedWeapons;
		
		private string _FindedAmmunitions;
		
		private string _FindedGunsHuntingAndFishing;
		
		private string _FindedNatureManagementProducts;
		
		private string _FindedDocuments;
		
		private string _FixingMethods;
		
		private int _Protocol_ProtocolID;
		
		private int _ViolatorDocumentID;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProtocolAboutInspectionIDChanging(int value);
    partial void OnProtocolAboutInspectionIDChanged();
    partial void OnFindedWeaponsChanging(string value);
    partial void OnFindedWeaponsChanged();
    partial void OnFindedAmmunitionsChanging(string value);
    partial void OnFindedAmmunitionsChanged();
    partial void OnFindedGunsHuntingAndFishingChanging(string value);
    partial void OnFindedGunsHuntingAndFishingChanged();
    partial void OnFindedNatureManagementProductsChanging(string value);
    partial void OnFindedNatureManagementProductsChanged();
    partial void OnFindedDocumentsChanging(string value);
    partial void OnFindedDocumentsChanged();
    partial void OnFixingMethodsChanging(string value);
    partial void OnFixingMethodsChanged();
    partial void OnProtocol_ProtocolIDChanging(int value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnViolatorDocumentIDChanging(int value);
    partial void OnViolatorDocumentIDChanged();
    #endregion
		
		public ProtocolAboutInspection()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolAboutInspectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProtocolAboutInspectionID
		{
			get
			{
				return this._ProtocolAboutInspectionID;
			}
			set
			{
				if ((this._ProtocolAboutInspectionID != value))
				{
					this.OnProtocolAboutInspectionIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolAboutInspectionID = value;
					this.SendPropertyChanged("ProtocolAboutInspectionID");
					this.OnProtocolAboutInspectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedWeapons", DbType="NVarChar(MAX)")]
		public string FindedWeapons
		{
			get
			{
				return this._FindedWeapons;
			}
			set
			{
				if ((this._FindedWeapons != value))
				{
					this.OnFindedWeaponsChanging(value);
					this.SendPropertyChanging();
					this._FindedWeapons = value;
					this.SendPropertyChanged("FindedWeapons");
					this.OnFindedWeaponsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedAmmunitions", DbType="NVarChar(MAX)")]
		public string FindedAmmunitions
		{
			get
			{
				return this._FindedAmmunitions;
			}
			set
			{
				if ((this._FindedAmmunitions != value))
				{
					this.OnFindedAmmunitionsChanging(value);
					this.SendPropertyChanging();
					this._FindedAmmunitions = value;
					this.SendPropertyChanged("FindedAmmunitions");
					this.OnFindedAmmunitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedGunsHuntingAndFishing", DbType="NVarChar(MAX)")]
		public string FindedGunsHuntingAndFishing
		{
			get
			{
				return this._FindedGunsHuntingAndFishing;
			}
			set
			{
				if ((this._FindedGunsHuntingAndFishing != value))
				{
					this.OnFindedGunsHuntingAndFishingChanging(value);
					this.SendPropertyChanging();
					this._FindedGunsHuntingAndFishing = value;
					this.SendPropertyChanged("FindedGunsHuntingAndFishing");
					this.OnFindedGunsHuntingAndFishingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedNatureManagementProducts", DbType="NVarChar(MAX)")]
		public string FindedNatureManagementProducts
		{
			get
			{
				return this._FindedNatureManagementProducts;
			}
			set
			{
				if ((this._FindedNatureManagementProducts != value))
				{
					this.OnFindedNatureManagementProductsChanging(value);
					this.SendPropertyChanging();
					this._FindedNatureManagementProducts = value;
					this.SendPropertyChanged("FindedNatureManagementProducts");
					this.OnFindedNatureManagementProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedDocuments", DbType="NVarChar(MAX)")]
		public string FindedDocuments
		{
			get
			{
				return this._FindedDocuments;
			}
			set
			{
				if ((this._FindedDocuments != value))
				{
					this.OnFindedDocumentsChanging(value);
					this.SendPropertyChanging();
					this._FindedDocuments = value;
					this.SendPropertyChanged("FindedDocuments");
					this.OnFindedDocumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixingMethods", DbType="NVarChar(MAX)")]
		public string FixingMethods
		{
			get
			{
				return this._FixingMethods;
			}
			set
			{
				if ((this._FixingMethods != value))
				{
					this.OnFixingMethodsChanging(value);
					this.SendPropertyChanging();
					this._FixingMethods = value;
					this.SendPropertyChanged("FixingMethods");
					this.OnFixingMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int NOT NULL")]
		public int Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorDocumentID", DbType="Int NOT NULL")]
		public int ViolatorDocumentID
		{
			get
			{
				return this._ViolatorDocumentID;
			}
			set
			{
				if ((this._ViolatorDocumentID != value))
				{
					this.OnViolatorDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._ViolatorDocumentID = value;
					this.SendPropertyChanged("ViolatorDocumentID");
					this.OnViolatorDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutInspection", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.ProtocolAboutInspections.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.ProtocolAboutInspections.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(int);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProtocolAboutViolationOrganisations")]
	public partial class ProtocolAboutViolationOrganisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProtocolAboutViolationOrganisationID;
		
		private System.DateTime _ViolationTime;
		
		private string _KOAP;
		
		private int _Protocol_ProtocolID;
		
		private int _OrganisationID;
		
		private string _Description;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProtocolAboutViolationOrganisationIDChanging(int value);
    partial void OnProtocolAboutViolationOrganisationIDChanged();
    partial void OnViolationTimeChanging(System.DateTime value);
    partial void OnViolationTimeChanged();
    partial void OnKOAPChanging(string value);
    partial void OnKOAPChanged();
    partial void OnProtocol_ProtocolIDChanging(int value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnOrganisationIDChanging(int value);
    partial void OnOrganisationIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ProtocolAboutViolationOrganisation()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolAboutViolationOrganisationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProtocolAboutViolationOrganisationID
		{
			get
			{
				return this._ProtocolAboutViolationOrganisationID;
			}
			set
			{
				if ((this._ProtocolAboutViolationOrganisationID != value))
				{
					this.OnProtocolAboutViolationOrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolAboutViolationOrganisationID = value;
					this.SendPropertyChanged("ProtocolAboutViolationOrganisationID");
					this.OnProtocolAboutViolationOrganisationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationTime", DbType="DateTime NOT NULL")]
		public System.DateTime ViolationTime
		{
			get
			{
				return this._ViolationTime;
			}
			set
			{
				if ((this._ViolationTime != value))
				{
					this.OnViolationTimeChanging(value);
					this.SendPropertyChanging();
					this._ViolationTime = value;
					this.SendPropertyChanged("ViolationTime");
					this.OnViolationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOAP", DbType="NVarChar(MAX)")]
		public string KOAP
		{
			get
			{
				return this._KOAP;
			}
			set
			{
				if ((this._KOAP != value))
				{
					this.OnKOAPChanging(value);
					this.SendPropertyChanging();
					this._KOAP = value;
					this.SendPropertyChanged("KOAP");
					this.OnKOAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int NOT NULL")]
		public int Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationID", DbType="Int NOT NULL")]
		public int OrganisationID
		{
			get
			{
				return this._OrganisationID;
			}
			set
			{
				if ((this._OrganisationID != value))
				{
					this.OnOrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationID = value;
					this.SendPropertyChanged("OrganisationID");
					this.OnOrganisationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutViolationOrganisation", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.ProtocolAboutViolationOrganisations.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.ProtocolAboutViolationOrganisations.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(int);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProtocolAboutViolationPersones")]
	public partial class ProtocolAboutViolationPersone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProtocolAboutViolationPersoneID;
		
		private System.DateTime _ViolationDate;
		
		private string _ViolationDescription;
		
		private string _KOAP;
		
		private string _FindedNatureManagementProducts;
		
		private string _FindedWeapons;
		
		private string _FindedGunsHuntingAndFishing;
		
		private int _Protocol_ProtocolID;
		
		private int _ViolatorDocumentID;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProtocolAboutViolationPersoneIDChanging(int value);
    partial void OnProtocolAboutViolationPersoneIDChanged();
    partial void OnViolationDateChanging(System.DateTime value);
    partial void OnViolationDateChanged();
    partial void OnViolationDescriptionChanging(string value);
    partial void OnViolationDescriptionChanged();
    partial void OnKOAPChanging(string value);
    partial void OnKOAPChanged();
    partial void OnFindedNatureManagementProductsChanging(string value);
    partial void OnFindedNatureManagementProductsChanged();
    partial void OnFindedWeaponsChanging(string value);
    partial void OnFindedWeaponsChanged();
    partial void OnFindedGunsHuntingAndFishingChanging(string value);
    partial void OnFindedGunsHuntingAndFishingChanged();
    partial void OnProtocol_ProtocolIDChanging(int value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnViolatorDocumentIDChanging(int value);
    partial void OnViolatorDocumentIDChanged();
    #endregion
		
		public ProtocolAboutViolationPersone()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolAboutViolationPersoneID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProtocolAboutViolationPersoneID
		{
			get
			{
				return this._ProtocolAboutViolationPersoneID;
			}
			set
			{
				if ((this._ProtocolAboutViolationPersoneID != value))
				{
					this.OnProtocolAboutViolationPersoneIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolAboutViolationPersoneID = value;
					this.SendPropertyChanged("ProtocolAboutViolationPersoneID");
					this.OnProtocolAboutViolationPersoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationDate", DbType="DateTime NOT NULL")]
		public System.DateTime ViolationDate
		{
			get
			{
				return this._ViolationDate;
			}
			set
			{
				if ((this._ViolationDate != value))
				{
					this.OnViolationDateChanging(value);
					this.SendPropertyChanging();
					this._ViolationDate = value;
					this.SendPropertyChanged("ViolationDate");
					this.OnViolationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationDescription", DbType="NVarChar(MAX)")]
		public string ViolationDescription
		{
			get
			{
				return this._ViolationDescription;
			}
			set
			{
				if ((this._ViolationDescription != value))
				{
					this.OnViolationDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ViolationDescription = value;
					this.SendPropertyChanged("ViolationDescription");
					this.OnViolationDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOAP", DbType="NVarChar(MAX)")]
		public string KOAP
		{
			get
			{
				return this._KOAP;
			}
			set
			{
				if ((this._KOAP != value))
				{
					this.OnKOAPChanging(value);
					this.SendPropertyChanging();
					this._KOAP = value;
					this.SendPropertyChanged("KOAP");
					this.OnKOAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedNatureManagementProducts", DbType="NVarChar(MAX)")]
		public string FindedNatureManagementProducts
		{
			get
			{
				return this._FindedNatureManagementProducts;
			}
			set
			{
				if ((this._FindedNatureManagementProducts != value))
				{
					this.OnFindedNatureManagementProductsChanging(value);
					this.SendPropertyChanging();
					this._FindedNatureManagementProducts = value;
					this.SendPropertyChanged("FindedNatureManagementProducts");
					this.OnFindedNatureManagementProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedWeapons", DbType="NVarChar(MAX)")]
		public string FindedWeapons
		{
			get
			{
				return this._FindedWeapons;
			}
			set
			{
				if ((this._FindedWeapons != value))
				{
					this.OnFindedWeaponsChanging(value);
					this.SendPropertyChanging();
					this._FindedWeapons = value;
					this.SendPropertyChanged("FindedWeapons");
					this.OnFindedWeaponsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FindedGunsHuntingAndFishing", DbType="NVarChar(MAX)")]
		public string FindedGunsHuntingAndFishing
		{
			get
			{
				return this._FindedGunsHuntingAndFishing;
			}
			set
			{
				if ((this._FindedGunsHuntingAndFishing != value))
				{
					this.OnFindedGunsHuntingAndFishingChanging(value);
					this.SendPropertyChanging();
					this._FindedGunsHuntingAndFishing = value;
					this.SendPropertyChanged("FindedGunsHuntingAndFishing");
					this.OnFindedGunsHuntingAndFishingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int NOT NULL")]
		public int Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorDocumentID", DbType="Int NOT NULL")]
		public int ViolatorDocumentID
		{
			get
			{
				return this._ViolatorDocumentID;
			}
			set
			{
				if ((this._ViolatorDocumentID != value))
				{
					this.OnViolatorDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._ViolatorDocumentID = value;
					this.SendPropertyChanged("ViolatorDocumentID");
					this.OnViolatorDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutViolationPersone", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.ProtocolAboutViolationPersones.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.ProtocolAboutViolationPersones.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(int);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProtocolAboutWithdraws")]
	public partial class ProtocolAboutWithdraw : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProtocolAboutWithdrawID;
		
		private string _WithdrawWeapons;
		
		private string _WithdrawAmmunitions;
		
		private string _WithdrawGunsHuntingAndFishing;
		
		private string _WithdrawNatureManagementProducts;
		
		private string _WithdrawDocuments;
		
		private string _FixingMethods;
		
		private int _Protocol_ProtocolID;
		
		private int _ViolatorDocumentID;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProtocolAboutWithdrawIDChanging(int value);
    partial void OnProtocolAboutWithdrawIDChanged();
    partial void OnWithdrawWeaponsChanging(string value);
    partial void OnWithdrawWeaponsChanged();
    partial void OnWithdrawAmmunitionsChanging(string value);
    partial void OnWithdrawAmmunitionsChanged();
    partial void OnWithdrawGunsHuntingAndFishingChanging(string value);
    partial void OnWithdrawGunsHuntingAndFishingChanged();
    partial void OnWithdrawNatureManagementProductsChanging(string value);
    partial void OnWithdrawNatureManagementProductsChanged();
    partial void OnWithdrawDocumentsChanging(string value);
    partial void OnWithdrawDocumentsChanged();
    partial void OnFixingMethodsChanging(string value);
    partial void OnFixingMethodsChanged();
    partial void OnProtocol_ProtocolIDChanging(int value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnViolatorDocumentIDChanging(int value);
    partial void OnViolatorDocumentIDChanged();
    #endregion
		
		public ProtocolAboutWithdraw()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolAboutWithdrawID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProtocolAboutWithdrawID
		{
			get
			{
				return this._ProtocolAboutWithdrawID;
			}
			set
			{
				if ((this._ProtocolAboutWithdrawID != value))
				{
					this.OnProtocolAboutWithdrawIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolAboutWithdrawID = value;
					this.SendPropertyChanged("ProtocolAboutWithdrawID");
					this.OnProtocolAboutWithdrawIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawWeapons", DbType="NVarChar(MAX)")]
		public string WithdrawWeapons
		{
			get
			{
				return this._WithdrawWeapons;
			}
			set
			{
				if ((this._WithdrawWeapons != value))
				{
					this.OnWithdrawWeaponsChanging(value);
					this.SendPropertyChanging();
					this._WithdrawWeapons = value;
					this.SendPropertyChanged("WithdrawWeapons");
					this.OnWithdrawWeaponsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawAmmunitions", DbType="NVarChar(MAX)")]
		public string WithdrawAmmunitions
		{
			get
			{
				return this._WithdrawAmmunitions;
			}
			set
			{
				if ((this._WithdrawAmmunitions != value))
				{
					this.OnWithdrawAmmunitionsChanging(value);
					this.SendPropertyChanging();
					this._WithdrawAmmunitions = value;
					this.SendPropertyChanged("WithdrawAmmunitions");
					this.OnWithdrawAmmunitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawGunsHuntingAndFishing", DbType="NVarChar(MAX)")]
		public string WithdrawGunsHuntingAndFishing
		{
			get
			{
				return this._WithdrawGunsHuntingAndFishing;
			}
			set
			{
				if ((this._WithdrawGunsHuntingAndFishing != value))
				{
					this.OnWithdrawGunsHuntingAndFishingChanging(value);
					this.SendPropertyChanging();
					this._WithdrawGunsHuntingAndFishing = value;
					this.SendPropertyChanged("WithdrawGunsHuntingAndFishing");
					this.OnWithdrawGunsHuntingAndFishingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawNatureManagementProducts", DbType="NVarChar(MAX)")]
		public string WithdrawNatureManagementProducts
		{
			get
			{
				return this._WithdrawNatureManagementProducts;
			}
			set
			{
				if ((this._WithdrawNatureManagementProducts != value))
				{
					this.OnWithdrawNatureManagementProductsChanging(value);
					this.SendPropertyChanging();
					this._WithdrawNatureManagementProducts = value;
					this.SendPropertyChanged("WithdrawNatureManagementProducts");
					this.OnWithdrawNatureManagementProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawDocuments", DbType="NVarChar(MAX)")]
		public string WithdrawDocuments
		{
			get
			{
				return this._WithdrawDocuments;
			}
			set
			{
				if ((this._WithdrawDocuments != value))
				{
					this.OnWithdrawDocumentsChanging(value);
					this.SendPropertyChanging();
					this._WithdrawDocuments = value;
					this.SendPropertyChanged("WithdrawDocuments");
					this.OnWithdrawDocumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixingMethods", DbType="NVarChar(MAX)")]
		public string FixingMethods
		{
			get
			{
				return this._FixingMethods;
			}
			set
			{
				if ((this._FixingMethods != value))
				{
					this.OnFixingMethodsChanging(value);
					this.SendPropertyChanging();
					this._FixingMethods = value;
					this.SendPropertyChanged("FixingMethods");
					this.OnFixingMethodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int NOT NULL")]
		public int Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorDocumentID", DbType="Int NOT NULL")]
		public int ViolatorDocumentID
		{
			get
			{
				return this._ViolatorDocumentID;
			}
			set
			{
				if ((this._ViolatorDocumentID != value))
				{
					this.OnViolatorDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._ViolatorDocumentID = value;
					this.SendPropertyChanged("ViolatorDocumentID");
					this.OnViolatorDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutWithdraw", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.ProtocolAboutWithdraws.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.ProtocolAboutWithdraws.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(int);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Protocols")]
	public partial class Protocol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProtocolID;
		
		private int _ProtocolTypeID;
		
		private System.DateTime _DateCreatedProtocol;
		
		private string _PlaceCreatedProtocol;
		
		private double _PlaceCreatedProtocolN;
		
		private double _PlaceCreatedProtocolE;
		
		private int _ViolationID;
		
		private string _WitnessFIO_1;
		
		private string _WitnessLive_1;
		
		private string _WitnessFIO_2;
		
		private string _WitnessLive_2;
		
		private System.DateTime _DateSave;
		
		private System.DateTime _DateUpdate;
		
		private int _EmployerID;
		
		private EntitySet<DefinitionAboutViolation> _DefinitionAboutViolations;
		
		private EntitySet<Injunction> _Injunctions;
		
		private EntitySet<ProtocolAboutArrest> _ProtocolAboutArrests;
		
		private EntitySet<ProtocolAboutBringing> _ProtocolAboutBringings;
		
		private EntitySet<ProtocolAboutInspectionAutoe> _ProtocolAboutInspectionAutoes;
		
		private EntitySet<ProtocolAboutInspectionOrganisation> _ProtocolAboutInspectionOrganisations;
		
		private EntitySet<ProtocolAboutInspection> _ProtocolAboutInspections;
		
		private EntitySet<ProtocolAboutViolationOrganisation> _ProtocolAboutViolationOrganisations;
		
		private EntitySet<ProtocolAboutViolationPersone> _ProtocolAboutViolationPersones;
		
		private EntitySet<ProtocolAboutWithdraw> _ProtocolAboutWithdraws;
		
		private EntitySet<RulingForViolation> _RulingForViolations;
		
		private EntitySet<Violator> _Violators;
		
		private EntityRef<Violation> _Violation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProtocolIDChanging(int value);
    partial void OnProtocolIDChanged();
    partial void OnProtocolTypeIDChanging(int value);
    partial void OnProtocolTypeIDChanged();
    partial void OnDateCreatedProtocolChanging(System.DateTime value);
    partial void OnDateCreatedProtocolChanged();
    partial void OnPlaceCreatedProtocolChanging(string value);
    partial void OnPlaceCreatedProtocolChanged();
    partial void OnPlaceCreatedProtocolNChanging(double value);
    partial void OnPlaceCreatedProtocolNChanged();
    partial void OnPlaceCreatedProtocolEChanging(double value);
    partial void OnPlaceCreatedProtocolEChanged();
    partial void OnViolationIDChanging(int value);
    partial void OnViolationIDChanged();
    partial void OnWitnessFIO_1Changing(string value);
    partial void OnWitnessFIO_1Changed();
    partial void OnWitnessLive_1Changing(string value);
    partial void OnWitnessLive_1Changed();
    partial void OnWitnessFIO_2Changing(string value);
    partial void OnWitnessFIO_2Changed();
    partial void OnWitnessLive_2Changing(string value);
    partial void OnWitnessLive_2Changed();
    partial void OnDateSaveChanging(System.DateTime value);
    partial void OnDateSaveChanged();
    partial void OnDateUpdateChanging(System.DateTime value);
    partial void OnDateUpdateChanged();
    partial void OnEmployerIDChanging(int value);
    partial void OnEmployerIDChanged();
    #endregion
		
		public Protocol()
		{
			this._DefinitionAboutViolations = new EntitySet<DefinitionAboutViolation>(new Action<DefinitionAboutViolation>(this.attach_DefinitionAboutViolations), new Action<DefinitionAboutViolation>(this.detach_DefinitionAboutViolations));
			this._Injunctions = new EntitySet<Injunction>(new Action<Injunction>(this.attach_Injunctions), new Action<Injunction>(this.detach_Injunctions));
			this._ProtocolAboutArrests = new EntitySet<ProtocolAboutArrest>(new Action<ProtocolAboutArrest>(this.attach_ProtocolAboutArrests), new Action<ProtocolAboutArrest>(this.detach_ProtocolAboutArrests));
			this._ProtocolAboutBringings = new EntitySet<ProtocolAboutBringing>(new Action<ProtocolAboutBringing>(this.attach_ProtocolAboutBringings), new Action<ProtocolAboutBringing>(this.detach_ProtocolAboutBringings));
			this._ProtocolAboutInspectionAutoes = new EntitySet<ProtocolAboutInspectionAutoe>(new Action<ProtocolAboutInspectionAutoe>(this.attach_ProtocolAboutInspectionAutoes), new Action<ProtocolAboutInspectionAutoe>(this.detach_ProtocolAboutInspectionAutoes));
			this._ProtocolAboutInspectionOrganisations = new EntitySet<ProtocolAboutInspectionOrganisation>(new Action<ProtocolAboutInspectionOrganisation>(this.attach_ProtocolAboutInspectionOrganisations), new Action<ProtocolAboutInspectionOrganisation>(this.detach_ProtocolAboutInspectionOrganisations));
			this._ProtocolAboutInspections = new EntitySet<ProtocolAboutInspection>(new Action<ProtocolAboutInspection>(this.attach_ProtocolAboutInspections), new Action<ProtocolAboutInspection>(this.detach_ProtocolAboutInspections));
			this._ProtocolAboutViolationOrganisations = new EntitySet<ProtocolAboutViolationOrganisation>(new Action<ProtocolAboutViolationOrganisation>(this.attach_ProtocolAboutViolationOrganisations), new Action<ProtocolAboutViolationOrganisation>(this.detach_ProtocolAboutViolationOrganisations));
			this._ProtocolAboutViolationPersones = new EntitySet<ProtocolAboutViolationPersone>(new Action<ProtocolAboutViolationPersone>(this.attach_ProtocolAboutViolationPersones), new Action<ProtocolAboutViolationPersone>(this.detach_ProtocolAboutViolationPersones));
			this._ProtocolAboutWithdraws = new EntitySet<ProtocolAboutWithdraw>(new Action<ProtocolAboutWithdraw>(this.attach_ProtocolAboutWithdraws), new Action<ProtocolAboutWithdraw>(this.detach_ProtocolAboutWithdraws));
			this._RulingForViolations = new EntitySet<RulingForViolation>(new Action<RulingForViolation>(this.attach_RulingForViolations), new Action<RulingForViolation>(this.detach_RulingForViolations));
			this._Violators = new EntitySet<Violator>(new Action<Violator>(this.attach_Violators), new Action<Violator>(this.detach_Violators));
			this._Violation = default(EntityRef<Violation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProtocolID
		{
			get
			{
				return this._ProtocolID;
			}
			set
			{
				if ((this._ProtocolID != value))
				{
					this.OnProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolID = value;
					this.SendPropertyChanged("ProtocolID");
					this.OnProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolTypeID", DbType="Int NOT NULL")]
		public int ProtocolTypeID
		{
			get
			{
				return this._ProtocolTypeID;
			}
			set
			{
				if ((this._ProtocolTypeID != value))
				{
					this.OnProtocolTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolTypeID = value;
					this.SendPropertyChanged("ProtocolTypeID");
					this.OnProtocolTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreatedProtocol", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreatedProtocol
		{
			get
			{
				return this._DateCreatedProtocol;
			}
			set
			{
				if ((this._DateCreatedProtocol != value))
				{
					this.OnDateCreatedProtocolChanging(value);
					this.SendPropertyChanging();
					this._DateCreatedProtocol = value;
					this.SendPropertyChanged("DateCreatedProtocol");
					this.OnDateCreatedProtocolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceCreatedProtocol", DbType="NVarChar(MAX)")]
		public string PlaceCreatedProtocol
		{
			get
			{
				return this._PlaceCreatedProtocol;
			}
			set
			{
				if ((this._PlaceCreatedProtocol != value))
				{
					this.OnPlaceCreatedProtocolChanging(value);
					this.SendPropertyChanging();
					this._PlaceCreatedProtocol = value;
					this.SendPropertyChanged("PlaceCreatedProtocol");
					this.OnPlaceCreatedProtocolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceCreatedProtocolN", DbType="Float NOT NULL")]
		public double PlaceCreatedProtocolN
		{
			get
			{
				return this._PlaceCreatedProtocolN;
			}
			set
			{
				if ((this._PlaceCreatedProtocolN != value))
				{
					this.OnPlaceCreatedProtocolNChanging(value);
					this.SendPropertyChanging();
					this._PlaceCreatedProtocolN = value;
					this.SendPropertyChanged("PlaceCreatedProtocolN");
					this.OnPlaceCreatedProtocolNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceCreatedProtocolE", DbType="Float NOT NULL")]
		public double PlaceCreatedProtocolE
		{
			get
			{
				return this._PlaceCreatedProtocolE;
			}
			set
			{
				if ((this._PlaceCreatedProtocolE != value))
				{
					this.OnPlaceCreatedProtocolEChanging(value);
					this.SendPropertyChanging();
					this._PlaceCreatedProtocolE = value;
					this.SendPropertyChanged("PlaceCreatedProtocolE");
					this.OnPlaceCreatedProtocolEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationID", DbType="Int NOT NULL")]
		public int ViolationID
		{
			get
			{
				return this._ViolationID;
			}
			set
			{
				if ((this._ViolationID != value))
				{
					if (this._Violation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViolationIDChanging(value);
					this.SendPropertyChanging();
					this._ViolationID = value;
					this.SendPropertyChanged("ViolationID");
					this.OnViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessFIO_1", DbType="NVarChar(MAX)")]
		public string WitnessFIO_1
		{
			get
			{
				return this._WitnessFIO_1;
			}
			set
			{
				if ((this._WitnessFIO_1 != value))
				{
					this.OnWitnessFIO_1Changing(value);
					this.SendPropertyChanging();
					this._WitnessFIO_1 = value;
					this.SendPropertyChanged("WitnessFIO_1");
					this.OnWitnessFIO_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessLive_1", DbType="NVarChar(MAX)")]
		public string WitnessLive_1
		{
			get
			{
				return this._WitnessLive_1;
			}
			set
			{
				if ((this._WitnessLive_1 != value))
				{
					this.OnWitnessLive_1Changing(value);
					this.SendPropertyChanging();
					this._WitnessLive_1 = value;
					this.SendPropertyChanged("WitnessLive_1");
					this.OnWitnessLive_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessFIO_2", DbType="NVarChar(MAX)")]
		public string WitnessFIO_2
		{
			get
			{
				return this._WitnessFIO_2;
			}
			set
			{
				if ((this._WitnessFIO_2 != value))
				{
					this.OnWitnessFIO_2Changing(value);
					this.SendPropertyChanging();
					this._WitnessFIO_2 = value;
					this.SendPropertyChanged("WitnessFIO_2");
					this.OnWitnessFIO_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WitnessLive_2", DbType="NVarChar(MAX)")]
		public string WitnessLive_2
		{
			get
			{
				return this._WitnessLive_2;
			}
			set
			{
				if ((this._WitnessLive_2 != value))
				{
					this.OnWitnessLive_2Changing(value);
					this.SendPropertyChanging();
					this._WitnessLive_2 = value;
					this.SendPropertyChanged("WitnessLive_2");
					this.OnWitnessLive_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSave", DbType="DateTime NOT NULL")]
		public System.DateTime DateSave
		{
			get
			{
				return this._DateSave;
			}
			set
			{
				if ((this._DateSave != value))
				{
					this.OnDateSaveChanging(value);
					this.SendPropertyChanging();
					this._DateSave = value;
					this.SendPropertyChanged("DateSave");
					this.OnDateSaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime DateUpdate
		{
			get
			{
				return this._DateUpdate;
			}
			set
			{
				if ((this._DateUpdate != value))
				{
					this.OnDateUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateUpdate = value;
					this.SendPropertyChanged("DateUpdate");
					this.OnDateUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerID", DbType="Int NOT NULL")]
		public int EmployerID
		{
			get
			{
				return this._EmployerID;
			}
			set
			{
				if ((this._EmployerID != value))
				{
					this.OnEmployerIDChanging(value);
					this.SendPropertyChanging();
					this._EmployerID = value;
					this.SendPropertyChanged("EmployerID");
					this.OnEmployerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_DefinitionAboutViolation", Storage="_DefinitionAboutViolations", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<DefinitionAboutViolation> DefinitionAboutViolations
		{
			get
			{
				return this._DefinitionAboutViolations;
			}
			set
			{
				this._DefinitionAboutViolations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_Injunction", Storage="_Injunctions", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<Injunction> Injunctions
		{
			get
			{
				return this._Injunctions;
			}
			set
			{
				this._Injunctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutArrest", Storage="_ProtocolAboutArrests", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<ProtocolAboutArrest> ProtocolAboutArrests
		{
			get
			{
				return this._ProtocolAboutArrests;
			}
			set
			{
				this._ProtocolAboutArrests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutBringing", Storage="_ProtocolAboutBringings", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<ProtocolAboutBringing> ProtocolAboutBringings
		{
			get
			{
				return this._ProtocolAboutBringings;
			}
			set
			{
				this._ProtocolAboutBringings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutInspectionAutoe", Storage="_ProtocolAboutInspectionAutoes", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<ProtocolAboutInspectionAutoe> ProtocolAboutInspectionAutoes
		{
			get
			{
				return this._ProtocolAboutInspectionAutoes;
			}
			set
			{
				this._ProtocolAboutInspectionAutoes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutInspectionOrganisation", Storage="_ProtocolAboutInspectionOrganisations", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<ProtocolAboutInspectionOrganisation> ProtocolAboutInspectionOrganisations
		{
			get
			{
				return this._ProtocolAboutInspectionOrganisations;
			}
			set
			{
				this._ProtocolAboutInspectionOrganisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutInspection", Storage="_ProtocolAboutInspections", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<ProtocolAboutInspection> ProtocolAboutInspections
		{
			get
			{
				return this._ProtocolAboutInspections;
			}
			set
			{
				this._ProtocolAboutInspections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutViolationOrganisation", Storage="_ProtocolAboutViolationOrganisations", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<ProtocolAboutViolationOrganisation> ProtocolAboutViolationOrganisations
		{
			get
			{
				return this._ProtocolAboutViolationOrganisations;
			}
			set
			{
				this._ProtocolAboutViolationOrganisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutViolationPersone", Storage="_ProtocolAboutViolationPersones", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<ProtocolAboutViolationPersone> ProtocolAboutViolationPersones
		{
			get
			{
				return this._ProtocolAboutViolationPersones;
			}
			set
			{
				this._ProtocolAboutViolationPersones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_ProtocolAboutWithdraw", Storage="_ProtocolAboutWithdraws", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<ProtocolAboutWithdraw> ProtocolAboutWithdraws
		{
			get
			{
				return this._ProtocolAboutWithdraws;
			}
			set
			{
				this._ProtocolAboutWithdraws.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_RulingForViolation", Storage="_RulingForViolations", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<RulingForViolation> RulingForViolations
		{
			get
			{
				return this._RulingForViolations;
			}
			set
			{
				this._RulingForViolations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_Violator", Storage="_Violators", ThisKey="ProtocolID", OtherKey="Protocol_ProtocolID")]
		public EntitySet<Violator> Violators
		{
			get
			{
				return this._Violators;
			}
			set
			{
				this._Violators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Violation_Protocol", Storage="_Violation", ThisKey="ViolationID", OtherKey="ViolationID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Violation Violation
		{
			get
			{
				return this._Violation.Entity;
			}
			set
			{
				Violation previousValue = this._Violation.Entity;
				if (((previousValue != value) 
							|| (this._Violation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Violation.Entity = null;
						previousValue.Protocols.Remove(this);
					}
					this._Violation.Entity = value;
					if ((value != null))
					{
						value.Protocols.Add(this);
						this._ViolationID = value.ViolationID;
					}
					else
					{
						this._ViolationID = default(int);
					}
					this.SendPropertyChanged("Violation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DefinitionAboutViolations(DefinitionAboutViolation entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_DefinitionAboutViolations(DefinitionAboutViolation entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_Injunctions(Injunction entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_Injunctions(Injunction entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_ProtocolAboutArrests(ProtocolAboutArrest entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_ProtocolAboutArrests(ProtocolAboutArrest entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_ProtocolAboutBringings(ProtocolAboutBringing entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_ProtocolAboutBringings(ProtocolAboutBringing entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_ProtocolAboutInspectionAutoes(ProtocolAboutInspectionAutoe entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_ProtocolAboutInspectionAutoes(ProtocolAboutInspectionAutoe entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_ProtocolAboutInspectionOrganisations(ProtocolAboutInspectionOrganisation entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_ProtocolAboutInspectionOrganisations(ProtocolAboutInspectionOrganisation entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_ProtocolAboutInspections(ProtocolAboutInspection entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_ProtocolAboutInspections(ProtocolAboutInspection entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_ProtocolAboutViolationOrganisations(ProtocolAboutViolationOrganisation entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_ProtocolAboutViolationOrganisations(ProtocolAboutViolationOrganisation entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_ProtocolAboutViolationPersones(ProtocolAboutViolationPersone entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_ProtocolAboutViolationPersones(ProtocolAboutViolationPersone entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_ProtocolAboutWithdraws(ProtocolAboutWithdraw entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_ProtocolAboutWithdraws(ProtocolAboutWithdraw entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_RulingForViolations(RulingForViolation entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_RulingForViolations(RulingForViolation entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
		
		private void attach_Violators(Violator entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = this;
		}
		
		private void detach_Violators(Violator entity)
		{
			this.SendPropertyChanging();
			entity.Protocol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProtocolTypes")]
	public partial class ProtocolType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProtocolTypeID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProtocolTypeIDChanging(int value);
    partial void OnProtocolTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ProtocolType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProtocolTypeID
		{
			get
			{
				return this._ProtocolTypeID;
			}
			set
			{
				if ((this._ProtocolTypeID != value))
				{
					this.OnProtocolTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProtocolTypeID = value;
					this.SendPropertyChanged("ProtocolTypeID");
					this.OnProtocolTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RulingForViolations")]
	public partial class RulingForViolation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RulingForViolationID;
		
		private int _Number;
		
		private System.DateTime _FixingDate;
		
		private string _FixingInfo;
		
		private string _KOAP;
		
		private decimal _Fine;
		
		private decimal _Damage;
		
		private string _Products;
		
		private decimal _ProductsPrice;
		
		private string _AboutArrest;
		
		private string _BankDetails;
		
		private int _Protocol_ProtocolID;
		
		private int _ViolatorDocumentID;
		
		private int _OrganisationID;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRulingForViolationIDChanging(int value);
    partial void OnRulingForViolationIDChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnFixingDateChanging(System.DateTime value);
    partial void OnFixingDateChanged();
    partial void OnFixingInfoChanging(string value);
    partial void OnFixingInfoChanged();
    partial void OnKOAPChanging(string value);
    partial void OnKOAPChanged();
    partial void OnFineChanging(decimal value);
    partial void OnFineChanged();
    partial void OnDamageChanging(decimal value);
    partial void OnDamageChanged();
    partial void OnProductsChanging(string value);
    partial void OnProductsChanged();
    partial void OnProductsPriceChanging(decimal value);
    partial void OnProductsPriceChanged();
    partial void OnAboutArrestChanging(string value);
    partial void OnAboutArrestChanged();
    partial void OnBankDetailsChanging(string value);
    partial void OnBankDetailsChanged();
    partial void OnProtocol_ProtocolIDChanging(int value);
    partial void OnProtocol_ProtocolIDChanged();
    partial void OnViolatorDocumentIDChanging(int value);
    partial void OnViolatorDocumentIDChanged();
    partial void OnOrganisationIDChanging(int value);
    partial void OnOrganisationIDChanged();
    #endregion
		
		public RulingForViolation()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulingForViolationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RulingForViolationID
		{
			get
			{
				return this._RulingForViolationID;
			}
			set
			{
				if ((this._RulingForViolationID != value))
				{
					this.OnRulingForViolationIDChanging(value);
					this.SendPropertyChanging();
					this._RulingForViolationID = value;
					this.SendPropertyChanged("RulingForViolationID");
					this.OnRulingForViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixingDate", DbType="DateTime NOT NULL")]
		public System.DateTime FixingDate
		{
			get
			{
				return this._FixingDate;
			}
			set
			{
				if ((this._FixingDate != value))
				{
					this.OnFixingDateChanging(value);
					this.SendPropertyChanging();
					this._FixingDate = value;
					this.SendPropertyChanged("FixingDate");
					this.OnFixingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixingInfo", DbType="NVarChar(MAX)")]
		public string FixingInfo
		{
			get
			{
				return this._FixingInfo;
			}
			set
			{
				if ((this._FixingInfo != value))
				{
					this.OnFixingInfoChanging(value);
					this.SendPropertyChanging();
					this._FixingInfo = value;
					this.SendPropertyChanged("FixingInfo");
					this.OnFixingInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOAP", DbType="NVarChar(MAX)")]
		public string KOAP
		{
			get
			{
				return this._KOAP;
			}
			set
			{
				if ((this._KOAP != value))
				{
					this.OnKOAPChanging(value);
					this.SendPropertyChanging();
					this._KOAP = value;
					this.SendPropertyChanged("KOAP");
					this.OnKOAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fine", DbType="Decimal(18,2) NOT NULL")]
		public decimal Fine
		{
			get
			{
				return this._Fine;
			}
			set
			{
				if ((this._Fine != value))
				{
					this.OnFineChanging(value);
					this.SendPropertyChanging();
					this._Fine = value;
					this.SendPropertyChanged("Fine");
					this.OnFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Damage", DbType="Decimal(18,2) NOT NULL")]
		public decimal Damage
		{
			get
			{
				return this._Damage;
			}
			set
			{
				if ((this._Damage != value))
				{
					this.OnDamageChanging(value);
					this.SendPropertyChanging();
					this._Damage = value;
					this.SendPropertyChanged("Damage");
					this.OnDamageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="NVarChar(MAX)")]
		public string Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this.OnProductsChanging(value);
					this.SendPropertyChanging();
					this._Products = value;
					this.SendPropertyChanged("Products");
					this.OnProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductsPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal ProductsPrice
		{
			get
			{
				return this._ProductsPrice;
			}
			set
			{
				if ((this._ProductsPrice != value))
				{
					this.OnProductsPriceChanging(value);
					this.SendPropertyChanging();
					this._ProductsPrice = value;
					this.SendPropertyChanged("ProductsPrice");
					this.OnProductsPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutArrest", DbType="NVarChar(MAX)")]
		public string AboutArrest
		{
			get
			{
				return this._AboutArrest;
			}
			set
			{
				if ((this._AboutArrest != value))
				{
					this.OnAboutArrestChanging(value);
					this.SendPropertyChanging();
					this._AboutArrest = value;
					this.SendPropertyChanged("AboutArrest");
					this.OnAboutArrestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDetails", DbType="NVarChar(MAX)")]
		public string BankDetails
		{
			get
			{
				return this._BankDetails;
			}
			set
			{
				if ((this._BankDetails != value))
				{
					this.OnBankDetailsChanging(value);
					this.SendPropertyChanging();
					this._BankDetails = value;
					this.SendPropertyChanged("BankDetails");
					this.OnBankDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int NOT NULL")]
		public int Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorDocumentID", DbType="Int NOT NULL")]
		public int ViolatorDocumentID
		{
			get
			{
				return this._ViolatorDocumentID;
			}
			set
			{
				if ((this._ViolatorDocumentID != value))
				{
					this.OnViolatorDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._ViolatorDocumentID = value;
					this.SendPropertyChanged("ViolatorDocumentID");
					this.OnViolatorDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationID", DbType="Int NOT NULL")]
		public int OrganisationID
		{
			get
			{
				return this._OrganisationID;
			}
			set
			{
				if ((this._OrganisationID != value))
				{
					this.OnOrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationID = value;
					this.SendPropertyChanged("OrganisationID");
					this.OnOrganisationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_RulingForViolation", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.RulingForViolations.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.RulingForViolations.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(int);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViolationImages")]
	public partial class ViolationImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ViolationImageID;
		
		private System.Data.Linq.Binary _Image;
		
		private System.Nullable<int> _Violation_ViolationID;
		
		private EntityRef<Violation> _Violation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnViolationImageIDChanging(int value);
    partial void OnViolationImageIDChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnViolation_ViolationIDChanging(System.Nullable<int> value);
    partial void OnViolation_ViolationIDChanged();
    #endregion
		
		public ViolationImage()
		{
			this._Violation = default(EntityRef<Violation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ViolationImageID
		{
			get
			{
				return this._ViolationImageID;
			}
			set
			{
				if ((this._ViolationImageID != value))
				{
					this.OnViolationImageIDChanging(value);
					this.SendPropertyChanging();
					this._ViolationImageID = value;
					this.SendPropertyChanged("ViolationImageID");
					this.OnViolationImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Violation_ViolationID", DbType="Int")]
		public System.Nullable<int> Violation_ViolationID
		{
			get
			{
				return this._Violation_ViolationID;
			}
			set
			{
				if ((this._Violation_ViolationID != value))
				{
					if (this._Violation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViolation_ViolationIDChanging(value);
					this.SendPropertyChanging();
					this._Violation_ViolationID = value;
					this.SendPropertyChanged("Violation_ViolationID");
					this.OnViolation_ViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Violation_ViolationImage", Storage="_Violation", ThisKey="Violation_ViolationID", OtherKey="ViolationID", IsForeignKey=true)]
		public Violation Violation
		{
			get
			{
				return this._Violation.Entity;
			}
			set
			{
				Violation previousValue = this._Violation.Entity;
				if (((previousValue != value) 
							|| (this._Violation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Violation.Entity = null;
						previousValue.ViolationImages.Remove(this);
					}
					this._Violation.Entity = value;
					if ((value != null))
					{
						value.ViolationImages.Add(this);
						this._Violation_ViolationID = value.ViolationID;
					}
					else
					{
						this._Violation_ViolationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Violation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Violations")]
	public partial class Violation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ViolationID;
		
		private System.DateTime _Date;
		
		private double _N;
		
		private double _E;
		
		private string _Description;
		
		private System.Nullable<int> _ViolationType_ViolationTypeID;
		
		private System.DateTime _DateSave;
		
		private System.DateTime _DateUpdate;
		
		private EntitySet<Protocol> _Protocols;
		
		private EntitySet<ViolationImage> _ViolationImages;
		
		private EntityRef<ViolationType> _ViolationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnViolationIDChanging(int value);
    partial void OnViolationIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNChanging(double value);
    partial void OnNChanged();
    partial void OnEChanging(double value);
    partial void OnEChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnViolationType_ViolationTypeIDChanging(System.Nullable<int> value);
    partial void OnViolationType_ViolationTypeIDChanged();
    partial void OnDateSaveChanging(System.DateTime value);
    partial void OnDateSaveChanged();
    partial void OnDateUpdateChanging(System.DateTime value);
    partial void OnDateUpdateChanged();
    #endregion
		
		public Violation()
		{
			this._Protocols = new EntitySet<Protocol>(new Action<Protocol>(this.attach_Protocols), new Action<Protocol>(this.detach_Protocols));
			this._ViolationImages = new EntitySet<ViolationImage>(new Action<ViolationImage>(this.attach_ViolationImages), new Action<ViolationImage>(this.detach_ViolationImages));
			this._ViolationType = default(EntityRef<ViolationType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ViolationID
		{
			get
			{
				return this._ViolationID;
			}
			set
			{
				if ((this._ViolationID != value))
				{
					this.OnViolationIDChanging(value);
					this.SendPropertyChanging();
					this._ViolationID = value;
					this.SendPropertyChanged("ViolationID");
					this.OnViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N", DbType="Float NOT NULL")]
		public double N
		{
			get
			{
				return this._N;
			}
			set
			{
				if ((this._N != value))
				{
					this.OnNChanging(value);
					this.SendPropertyChanging();
					this._N = value;
					this.SendPropertyChanged("N");
					this.OnNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E", DbType="Float NOT NULL")]
		public double E
		{
			get
			{
				return this._E;
			}
			set
			{
				if ((this._E != value))
				{
					this.OnEChanging(value);
					this.SendPropertyChanging();
					this._E = value;
					this.SendPropertyChanged("E");
					this.OnEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationType_ViolationTypeID", DbType="Int")]
		public System.Nullable<int> ViolationType_ViolationTypeID
		{
			get
			{
				return this._ViolationType_ViolationTypeID;
			}
			set
			{
				if ((this._ViolationType_ViolationTypeID != value))
				{
					if (this._ViolationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViolationType_ViolationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ViolationType_ViolationTypeID = value;
					this.SendPropertyChanged("ViolationType_ViolationTypeID");
					this.OnViolationType_ViolationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSave", DbType="DateTime NOT NULL")]
		public System.DateTime DateSave
		{
			get
			{
				return this._DateSave;
			}
			set
			{
				if ((this._DateSave != value))
				{
					this.OnDateSaveChanging(value);
					this.SendPropertyChanging();
					this._DateSave = value;
					this.SendPropertyChanged("DateSave");
					this.OnDateSaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime DateUpdate
		{
			get
			{
				return this._DateUpdate;
			}
			set
			{
				if ((this._DateUpdate != value))
				{
					this.OnDateUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateUpdate = value;
					this.SendPropertyChanged("DateUpdate");
					this.OnDateUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Violation_Protocol", Storage="_Protocols", ThisKey="ViolationID", OtherKey="ViolationID")]
		public EntitySet<Protocol> Protocols
		{
			get
			{
				return this._Protocols;
			}
			set
			{
				this._Protocols.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Violation_ViolationImage", Storage="_ViolationImages", ThisKey="ViolationID", OtherKey="Violation_ViolationID")]
		public EntitySet<ViolationImage> ViolationImages
		{
			get
			{
				return this._ViolationImages;
			}
			set
			{
				this._ViolationImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ViolationType_Violation", Storage="_ViolationType", ThisKey="ViolationType_ViolationTypeID", OtherKey="ViolationTypeID", IsForeignKey=true)]
		public ViolationType ViolationType
		{
			get
			{
				return this._ViolationType.Entity;
			}
			set
			{
				ViolationType previousValue = this._ViolationType.Entity;
				if (((previousValue != value) 
							|| (this._ViolationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ViolationType.Entity = null;
						previousValue.Violations.Remove(this);
					}
					this._ViolationType.Entity = value;
					if ((value != null))
					{
						value.Violations.Add(this);
						this._ViolationType_ViolationTypeID = value.ViolationTypeID;
					}
					else
					{
						this._ViolationType_ViolationTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ViolationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Protocols(Protocol entity)
		{
			this.SendPropertyChanging();
			entity.Violation = this;
		}
		
		private void detach_Protocols(Protocol entity)
		{
			this.SendPropertyChanging();
			entity.Violation = null;
		}
		
		private void attach_ViolationImages(ViolationImage entity)
		{
			this.SendPropertyChanging();
			entity.Violation = this;
		}
		
		private void detach_ViolationImages(ViolationImage entity)
		{
			this.SendPropertyChanging();
			entity.Violation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViolationTypes")]
	public partial class ViolationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ViolationTypeID;
		
		private string _Name;
		
		private EntitySet<Violation> _Violations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnViolationTypeIDChanging(int value);
    partial void OnViolationTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ViolationType()
		{
			this._Violations = new EntitySet<Violation>(new Action<Violation>(this.attach_Violations), new Action<Violation>(this.detach_Violations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ViolationTypeID
		{
			get
			{
				return this._ViolationTypeID;
			}
			set
			{
				if ((this._ViolationTypeID != value))
				{
					this.OnViolationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ViolationTypeID = value;
					this.SendPropertyChanged("ViolationTypeID");
					this.OnViolationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ViolationType_Violation", Storage="_Violations", ThisKey="ViolationTypeID", OtherKey="ViolationType_ViolationTypeID")]
		public EntitySet<Violation> Violations
		{
			get
			{
				return this._Violations;
			}
			set
			{
				this._Violations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Violations(Violation entity)
		{
			this.SendPropertyChanging();
			entity.ViolationType = this;
		}
		
		private void detach_Violations(Violation entity)
		{
			this.SendPropertyChanging();
			entity.ViolationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Violators")]
	public partial class Violator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ViolatorID;
		
		private int _PersoneID;
		
		private int _ViolationID;
		
		private string _ViolatorType;
		
		private System.Nullable<int> _Protocol_ProtocolID;
		
		private EntityRef<Protocol> _Protocol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnViolatorIDChanging(int value);
    partial void OnViolatorIDChanged();
    partial void OnPersoneIDChanging(int value);
    partial void OnPersoneIDChanged();
    partial void OnViolationIDChanging(int value);
    partial void OnViolationIDChanged();
    partial void OnViolatorTypeChanging(string value);
    partial void OnViolatorTypeChanged();
    partial void OnProtocol_ProtocolIDChanging(System.Nullable<int> value);
    partial void OnProtocol_ProtocolIDChanged();
    #endregion
		
		public Violator()
		{
			this._Protocol = default(EntityRef<Protocol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ViolatorID
		{
			get
			{
				return this._ViolatorID;
			}
			set
			{
				if ((this._ViolatorID != value))
				{
					this.OnViolatorIDChanging(value);
					this.SendPropertyChanging();
					this._ViolatorID = value;
					this.SendPropertyChanged("ViolatorID");
					this.OnViolatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersoneID", DbType="Int NOT NULL")]
		public int PersoneID
		{
			get
			{
				return this._PersoneID;
			}
			set
			{
				if ((this._PersoneID != value))
				{
					this.OnPersoneIDChanging(value);
					this.SendPropertyChanging();
					this._PersoneID = value;
					this.SendPropertyChanged("PersoneID");
					this.OnPersoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationID", DbType="Int NOT NULL")]
		public int ViolationID
		{
			get
			{
				return this._ViolationID;
			}
			set
			{
				if ((this._ViolationID != value))
				{
					this.OnViolationIDChanging(value);
					this.SendPropertyChanging();
					this._ViolationID = value;
					this.SendPropertyChanged("ViolationID");
					this.OnViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolatorType", DbType="NVarChar(MAX)")]
		public string ViolatorType
		{
			get
			{
				return this._ViolatorType;
			}
			set
			{
				if ((this._ViolatorType != value))
				{
					this.OnViolatorTypeChanging(value);
					this.SendPropertyChanging();
					this._ViolatorType = value;
					this.SendPropertyChanged("ViolatorType");
					this.OnViolatorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protocol_ProtocolID", DbType="Int")]
		public System.Nullable<int> Protocol_ProtocolID
		{
			get
			{
				return this._Protocol_ProtocolID;
			}
			set
			{
				if ((this._Protocol_ProtocolID != value))
				{
					if (this._Protocol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProtocol_ProtocolIDChanging(value);
					this.SendPropertyChanging();
					this._Protocol_ProtocolID = value;
					this.SendPropertyChanged("Protocol_ProtocolID");
					this.OnProtocol_ProtocolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Protocol_Violator", Storage="_Protocol", ThisKey="Protocol_ProtocolID", OtherKey="ProtocolID", IsForeignKey=true)]
		public Protocol Protocol
		{
			get
			{
				return this._Protocol.Entity;
			}
			set
			{
				Protocol previousValue = this._Protocol.Entity;
				if (((previousValue != value) 
							|| (this._Protocol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Protocol.Entity = null;
						previousValue.Violators.Remove(this);
					}
					this._Protocol.Entity = value;
					if ((value != null))
					{
						value.Violators.Add(this);
						this._Protocol_ProtocolID = value.ProtocolID;
					}
					else
					{
						this._Protocol_ProtocolID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Protocol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
